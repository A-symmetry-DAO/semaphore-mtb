import ProvenZk.Gates
import ProvenZk.Ext.Vector

namespace SemaphoreMTB

def Order : ℕ := 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001
variable [Fact (Nat.Prime Order)]
abbrev F := ZMod Order

def sbox (Inp: F) (k: F -> Prop): Prop :=
    ∃gate_0, gate_0 = Gates.mul Inp Inp ∧
    ∃gate_1, gate_1 = Gates.mul gate_0 gate_0 ∧
    ∃gate_2, gate_2 = Gates.mul Inp gate_1 ∧
    k gate_2

def mds_3 (Inp: Vector F 3) (k: Vector F 3 -> Prop): Prop :=
    ∃gate_0, gate_0 = Gates.mul Inp[0] (7511745149465107256748700652201246547602992235352608707588321460060273774987:F) ∧
    ∃gate_1, gate_1 = Gates.add (0:F) gate_0 ∧
    ∃gate_2, gate_2 = Gates.mul Inp[1] (10370080108974718697676803824769673834027675643658433702224577712625900127200:F) ∧
    ∃gate_3, gate_3 = Gates.add gate_1 gate_2 ∧
    ∃gate_4, gate_4 = Gates.mul Inp[2] (19705173408229649878903981084052839426532978878058043055305024233888854471533:F) ∧
    ∃gate_5, gate_5 = Gates.add gate_3 gate_4 ∧
    ∃gate_6, gate_6 = Gates.mul Inp[0] (18732019378264290557468133440468564866454307626475683536618613112504878618481:F) ∧
    ∃gate_7, gate_7 = Gates.add (0:F) gate_6 ∧
    ∃gate_8, gate_8 = Gates.mul Inp[1] (20870176810702568768751421378473869562658540583882454726129544628203806653987:F) ∧
    ∃gate_9, gate_9 = Gates.add gate_7 gate_8 ∧
    ∃gate_10, gate_10 = Gates.mul Inp[2] (7266061498423634438633389053804536045105766754026813321943009179476902321146:F) ∧
    ∃gate_11, gate_11 = Gates.add gate_9 gate_10 ∧
    ∃gate_12, gate_12 = Gates.mul Inp[0] (9131299761947733513298312097611845208338517739621853568979632113419485819303:F) ∧
    ∃gate_13, gate_13 = Gates.add (0:F) gate_12 ∧
    ∃gate_14, gate_14 = Gates.mul Inp[1] (10595341252162738537912664445405114076324478519622938027420701542910180337937:F) ∧
    ∃gate_15, gate_15 = Gates.add gate_13 gate_14 ∧
    ∃gate_16, gate_16 = Gates.mul Inp[2] (11597556804922396090267472882856054602429588299176362916247939723151043581408:F) ∧
    ∃gate_17, gate_17 = Gates.add gate_15 gate_16 ∧
    k vec![gate_5, gate_11, gate_17]

def fullRound_3_3 (Inp: Vector F 3) (Consts: Vector F 3) (k: Vector F 3 -> Prop): Prop :=
    ∃gate_0, gate_0 = Gates.add Inp[0] Consts[0] ∧
    ∃gate_1, gate_1 = Gates.add Inp[1] Consts[1] ∧
    ∃gate_2, gate_2 = Gates.add Inp[2] Consts[2] ∧
    sbox gate_0 fun gate_3 =>
    sbox gate_1 fun gate_4 =>
    sbox gate_2 fun gate_5 =>
    mds_3 vec![gate_3, gate_4, gate_5] fun gate_6 =>
    k vec![gate_6[0], gate_6[1], gate_6[2]]

def halfRound_3_3 (Inp: Vector F 3) (Consts: Vector F 3) (k: Vector F 3 -> Prop): Prop :=
    ∃gate_0, gate_0 = Gates.add Inp[0] Consts[0] ∧
    ∃gate_1, gate_1 = Gates.add Inp[1] Consts[1] ∧
    ∃gate_2, gate_2 = Gates.add Inp[2] Consts[2] ∧
    sbox gate_0 fun gate_3 =>
    mds_3 vec![gate_3, gate_1, gate_2] fun gate_4 =>
    k vec![gate_4[0], gate_4[1], gate_4[2]]

def poseidon_3 (Inputs: Vector F 3) (k: Vector F 3 -> Prop): Prop :=
    fullRound_3_3 vec![Inputs[0], Inputs[1], Inputs[2]] vec![(6745197990210204598374042828761989596302876299545964402857411729872131034734:F), (426281677759936592021316809065178817848084678679510574715894138690250139748:F), (4014188762916583598888942667424965430287497824629657219807941460227372577781:F)] fun gate_0 =>
    fullRound_3_3 vec![gate_0[0], gate_0[1], gate_0[2]] vec![(21328925083209914769191926116470334003273872494252651254811226518870906634704:F), (19525217621804205041825319248827370085205895195618474548469181956339322154226:F), (1402547928439424661186498190603111095981986484908825517071607587179649375482:F)] fun gate_1 =>
    fullRound_3_3 vec![gate_1[0], gate_1[1], gate_1[2]] vec![(18320863691943690091503704046057443633081959680694199244583676572077409194605:F), (17709820605501892134371743295301255810542620360751268064484461849423726103416:F), (15970119011175710804034336110979394557344217932580634635707518729185096681010:F)] fun gate_2 =>
    fullRound_3_3 vec![gate_2[0], gate_2[1], gate_2[2]] vec![(9818625905832534778628436765635714771300533913823445439412501514317783880744:F), (6235167673500273618358172865171408902079591030551453531218774338170981503478:F), (12575685815457815780909564540589853169226710664203625668068862277336357031324:F)] fun gate_3 =>
    halfRound_3_3 vec![gate_3[0], gate_3[1], gate_3[2]] vec![(7381963244739421891665696965695211188125933529845348367882277882370864309593:F), (14214782117460029685087903971105962785460806586237411939435376993762368956406:F), (13382692957873425730537487257409819532582973556007555550953772737680185788165:F)] fun gate_4 =>
    halfRound_3_3 vec![gate_4[0], gate_4[1], gate_4[2]] vec![(2203881792421502412097043743980777162333765109810562102330023625047867378813:F), (2916799379096386059941979057020673941967403377243798575982519638429287573544:F), (4341714036313630002881786446132415875360643644216758539961571543427269293497:F)] fun gate_5 =>
    halfRound_3_3 vec![gate_5[0], gate_5[1], gate_5[2]] vec![(2340590164268886572738332390117165591168622939528604352383836760095320678310:F), (5222233506067684445011741833180208249846813936652202885155168684515636170204:F), (7963328565263035669460582454204125526132426321764384712313576357234706922961:F)] fun gate_6 =>
    halfRound_3_3 vec![gate_6[0], gate_6[1], gate_6[2]] vec![(1394121618978136816716817287892553782094854454366447781505650417569234586889:F), (20251767894547536128245030306810919879363877532719496013176573522769484883301:F), (141695147295366035069589946372747683366709960920818122842195372849143476473:F)] fun gate_7 =>
    halfRound_3_3 vec![gate_7[0], gate_7[1], gate_7[2]] vec![(15919677773886738212551540894030218900525794162097204800782557234189587084981:F), (2616624285043480955310772600732442182691089413248613225596630696960447611520:F), (4740655602437503003625476760295930165628853341577914460831224100471301981787:F)] fun gate_8 =>
    halfRound_3_3 vec![gate_8[0], gate_8[1], gate_8[2]] vec![(19201590924623513311141753466125212569043677014481753075022686585593991810752:F), (12116486795864712158501385780203500958268173542001460756053597574143933465696:F), (8481222075475748672358154589993007112877289817336436741649507712124418867136:F)] fun gate_9 =>
    halfRound_3_3 vec![gate_9[0], gate_9[1], gate_9[2]] vec![(5181207870440376967537721398591028675236553829547043817076573656878024336014:F), (1576305643467537308202593927724028147293702201461402534316403041563704263752:F), (2555752030748925341265856133642532487884589978209403118872788051695546807407:F)] fun gate_10 =>
    halfRound_3_3 vec![gate_10[0], gate_10[1], gate_10[2]] vec![(18840924862590752659304250828416640310422888056457367520753407434927494649454:F), (14593453114436356872569019099482380600010961031449147888385564231161572479535:F), (20826991704411880672028799007667199259549645488279985687894219600551387252871:F)] fun gate_11 =>
    halfRound_3_3 vec![gate_11[0], gate_11[1], gate_11[2]] vec![(9159011389589751902277217485643457078922343616356921337993871236707687166408:F), (5605846325255071220412087261490782205304876403716989785167758520729893194481:F), (1148784255964739709393622058074925404369763692117037208398835319441214134867:F)] fun gate_12 =>
    halfRound_3_3 vec![gate_12[0], gate_12[1], gate_12[2]] vec![(20945896491956417459309978192328611958993484165135279604807006821513499894540:F), (229312996389666104692157009189660162223783309871515463857687414818018508814:F), (21184391300727296923488439338697060571987191396173649012875080956309403646776:F)] fun gate_13 =>
    halfRound_3_3 vec![gate_13[0], gate_13[1], gate_13[2]] vec![(21853424399738097885762888601689700621597911601971608617330124755808946442758:F), (12776298811140222029408960445729157525018582422120161448937390282915768616621:F), (7556638921712565671493830639474905252516049452878366640087648712509680826732:F)] fun gate_14 =>
    halfRound_3_3 vec![gate_14[0], gate_14[1], gate_14[2]] vec![(19042212131548710076857572964084011858520620377048961573689299061399932349935:F), (12871359356889933725034558434803294882039795794349132643274844130484166679697:F), (3313271555224009399457959221795880655466141771467177849716499564904543504032:F)] fun gate_15 =>
    halfRound_3_3 vec![gate_15[0], gate_15[1], gate_15[2]] vec![(15080780006046305940429266707255063673138269243146576829483541808378091931472:F), (21300668809180077730195066774916591829321297484129506780637389508430384679582:F), (20480395468049323836126447690964858840772494303543046543729776750771407319822:F)] fun gate_16 =>
    halfRound_3_3 vec![gate_16[0], gate_16[1], gate_16[2]] vec![(10034492246236387932307199011778078115444704411143703430822959320969550003883:F), (19584962776865783763416938001503258436032522042569001300175637333222729790225:F), (20155726818439649091211122042505326538030503429443841583127932647435472711802:F)] fun gate_17 =>
    halfRound_3_3 vec![gate_17[0], gate_17[1], gate_17[2]] vec![(13313554736139368941495919643765094930693458639277286513236143495391474916777:F), (14606609055603079181113315307204024259649959674048912770003912154260692161833:F), (5563317320536360357019805881367133322562055054443943486481491020841431450882:F)] fun gate_18 =>
    halfRound_3_3 vec![gate_18[0], gate_18[1], gate_18[2]] vec![(10535419877021741166931390532371024954143141727751832596925779759801808223060:F), (12025323200952647772051708095132262602424463606315130667435888188024371598063:F), (2906495834492762782415522961458044920178260121151056598901462871824771097354:F)] fun gate_19 =>
    halfRound_3_3 vec![gate_19[0], gate_19[1], gate_19[2]] vec![(19131970618309428864375891649512521128588657129006772405220584460225143887876:F), (8896386073442729425831367074375892129571226824899294414632856215758860965449:F), (7748212315898910829925509969895667732958278025359537472413515465768989125274:F)] fun gate_20 =>
    halfRound_3_3 vec![gate_20[0], gate_20[1], gate_20[2]] vec![(422974903473869924285294686399247660575841594104291551918957116218939002865:F), (6398251826151191010634405259351528880538837895394722626439957170031528482771:F), (18978082967849498068717608127246258727629855559346799025101476822814831852169:F)] fun gate_21 =>
    halfRound_3_3 vec![gate_21[0], gate_21[1], gate_21[2]] vec![(19150742296744826773994641927898928595714611370355487304294875666791554590142:F), (12896891575271590393203506752066427004153880610948642373943666975402674068209:F), (9546270356416926575977159110423162512143435321217584886616658624852959369669:F)] fun gate_22 =>
    halfRound_3_3 vec![gate_22[0], gate_22[1], gate_22[2]] vec![(2159256158967802519099187112783460402410585039950369442740637803310736339200:F), (8911064487437952102278704807713767893452045491852457406400757953039127292263:F), (745203718271072817124702263707270113474103371777640557877379939715613501668:F)] fun gate_23 =>
    halfRound_3_3 vec![gate_23[0], gate_23[1], gate_23[2]] vec![(19313999467876585876087962875809436559985619524211587308123441305315685710594:F), (13254105126478921521101199309550428567648131468564858698707378705299481802310:F), (1842081783060652110083740461228060164332599013503094142244413855982571335453:F)] fun gate_24 =>
    halfRound_3_3 vec![gate_24[0], gate_24[1], gate_24[2]] vec![(9630707582521938235113899367442877106957117302212260601089037887382200262598:F), (5066637850921463603001689152130702510691309665971848984551789224031532240292:F), (4222575506342961001052323857466868245596202202118237252286417317084494678062:F)] fun gate_25 =>
    halfRound_3_3 vec![gate_25[0], gate_25[1], gate_25[2]] vec![(2919565560395273474653456663643621058897649501626354982855207508310069954086:F), (6828792324689892364977311977277548750189770865063718432946006481461319858171:F), (2245543836264212411244499299744964607957732316191654500700776604707526766099:F)] fun gate_26 =>
    halfRound_3_3 vec![gate_26[0], gate_26[1], gate_26[2]] vec![(19602444885919216544870739287153239096493385668743835386720501338355679311704:F), (8239538512351936341605373169291864076963368674911219628966947078336484944367:F), (15053013456316196458870481299866861595818749671771356646798978105863499965417:F)] fun gate_27 =>
    halfRound_3_3 vec![gate_27[0], gate_27[1], gate_27[2]] vec![(7173615418515925804810790963571435428017065786053377450925733428353831789901:F), (8239211677777829016346247446855147819062679124993100113886842075069166957042:F), (15330855478780269194281285878526984092296288422420009233557393252489043181621:F)] fun gate_28 =>
    halfRound_3_3 vec![gate_28[0], gate_28[1], gate_28[2]] vec![(10014883178425964324400942419088813432808659204697623248101862794157084619079:F), (14014440630268834826103915635277409547403899966106389064645466381170788813506:F), (3580284508947993352601712737893796312152276667249521401778537893620670305946:F)] fun gate_29 =>
    halfRound_3_3 vec![gate_29[0], gate_29[1], gate_29[2]] vec![(2559754020964039399020874042785294258009596917335212876725104742182177996988:F), (14898657953331064524657146359621913343900897440154577299309964768812788279359:F), (2094037260225570753385567402013028115218264157081728958845544426054943497065:F)] fun gate_30 =>
    halfRound_3_3 vec![gate_30[0], gate_30[1], gate_30[2]] vec![(18051086536715129874440142649831636862614413764019212222493256578581754875930:F), (21680659279808524976004872421382255670910633119979692059689680820959727969489:F), (13950668739013333802529221454188102772764935019081479852094403697438884885176:F)] fun gate_31 =>
    halfRound_3_3 vec![gate_31[0], gate_31[1], gate_31[2]] vec![(9703845704528288130475698300068368924202959408694460208903346143576482802458:F), (12064310080154762977097567536495874701200266107682637369509532768346427148165:F), (16970760937630487134309762150133050221647250855182482010338640862111040175223:F)] fun gate_32 =>
    halfRound_3_3 vec![gate_32[0], gate_32[1], gate_32[2]] vec![(9790997389841527686594908620011261506072956332346095631818178387333642218087:F), (16314772317774781682315680698375079500119933343877658265473913556101283387175:F), (82044870826814863425230825851780076663078706675282523830353041968943811739:F)] fun gate_33 =>
    halfRound_3_3 vec![gate_33[0], gate_33[1], gate_33[2]] vec![(21696416499108261787701615667919260888528264686979598953977501999747075085778:F), (327771579314982889069767086599893095509690747425186236545716715062234528958:F), (4606746338794869835346679399457321301521448510419912225455957310754258695442:F)] fun gate_34 =>
    halfRound_3_3 vec![gate_34[0], gate_34[1], gate_34[2]] vec![(64499140292086295251085369317820027058256893294990556166497635237544139149:F), (10455028514626281809317431738697215395754892241565963900707779591201786416553:F), (10421411526406559029881814534127830959833724368842872558146891658647152404488:F)] fun gate_35 =>
    halfRound_3_3 vec![gate_35[0], gate_35[1], gate_35[2]] vec![(18848084335930758908929996602136129516563864917028006334090900573158639401697:F), (13844582069112758573505569452838731733665881813247931940917033313637916625267:F), (13488838454403536473492810836925746129625931018303120152441617863324950564617:F)] fun gate_36 =>
    halfRound_3_3 vec![gate_36[0], gate_36[1], gate_36[2]] vec![(15742141787658576773362201234656079648895020623294182888893044264221895077688:F), (6756884846734501741323584200608866954194124526254904154220230538416015199997:F), (7860026400080412708388991924996537435137213401947704476935669541906823414404:F)] fun gate_37 =>
    halfRound_3_3 vec![gate_37[0], gate_37[1], gate_37[2]] vec![(7871040688194276447149361970364037034145427598711982334898258974993423182255:F), (20758972836260983284101736686981180669442461217558708348216227791678564394086:F), (21723241881201839361054939276225528403036494340235482225557493179929400043949:F)] fun gate_38 =>
    halfRound_3_3 vec![gate_38[0], gate_38[1], gate_38[2]] vec![(19428469330241922173653014973246050805326196062205770999171646238586440011910:F), (7969200143746252148180468265998213908636952110398450526104077406933642389443:F), (10950417916542216146808986264475443189195561844878185034086477052349738113024:F)] fun gate_39 =>
    halfRound_3_3 vec![gate_39[0], gate_39[1], gate_39[2]] vec![(18149233917533571579549129116652755182249709970669448788972210488823719849654:F), (3729796741814967444466779622727009306670204996071028061336690366291718751463:F), (5172504399789702452458550583224415301790558941194337190035441508103183388987:F)] fun gate_40 =>
    halfRound_3_3 vec![gate_40[0], gate_40[1], gate_40[2]] vec![(6686473297578275808822003704722284278892335730899287687997898239052863590235:F), (19426913098142877404613120616123695099909113097119499573837343516470853338513:F), (5120337081764243150760446206763109494847464512045895114970710519826059751800:F)] fun gate_41 =>
    halfRound_3_3 vec![gate_41[0], gate_41[1], gate_41[2]] vec![(5055737465570446530938379301905385631528718027725177854815404507095601126720:F), (14235578612970484492268974539959119923625505766550088220840324058885914976980:F), (653592517890187950103239281291172267359747551606210609563961204572842639923:F)] fun gate_42 =>
    halfRound_3_3 vec![gate_42[0], gate_42[1], gate_42[2]] vec![(5507360526092411682502736946959369987101940689834541471605074817375175870579:F), (7864202866011437199771472205361912625244234597659755013419363091895334445453:F), (21294659996736305811805196472076519801392453844037698272479731199885739891648:F)] fun gate_43 =>
    halfRound_3_3 vec![gate_43[0], gate_43[1], gate_43[2]] vec![(13767183507040326119772335839274719411331242166231012705169069242737428254651:F), (810181532076738148308457416289197585577119693706380535394811298325092337781:F), (14232321930654703053193240133923161848171310212544136614525040874814292190478:F)] fun gate_44 =>
    halfRound_3_3 vec![gate_44[0], gate_44[1], gate_44[2]] vec![(16796904728299128263054838299534612533844352058851230375569421467352578781209:F), (16256310366973209550759123431979563367001604350120872788217761535379268327259:F), (19791658638819031543640174069980007021961272701723090073894685478509001321817:F)] fun gate_45 =>
    halfRound_3_3 vec![gate_45[0], gate_45[1], gate_45[2]] vec![(7046232469803978873754056165670086532908888046886780200907660308846356865119:F), (16001732848952745747636754668380555263330934909183814105655567108556497219752:F), (9737276123084413897604802930591512772593843242069849260396983774140735981896:F)] fun gate_46 =>
    halfRound_3_3 vec![gate_46[0], gate_46[1], gate_46[2]] vec![(11410895086919039954381533622971292904413121053792570364694836768885182251535:F), (19098362474249267294548762387533474746422711206129028436248281690105483603471:F), (11013788190750472643548844759298623898218957233582881400726340624764440203586:F)] fun gate_47 =>
    halfRound_3_3 vec![gate_47[0], gate_47[1], gate_47[2]] vec![(2206958256327295151076063922661677909471794458896944583339625762978736821035:F), (7171889270225471948987523104033632910444398328090760036609063776968837717795:F), (2510237900514902891152324520472140114359583819338640775472608119384714834368:F)] fun gate_48 =>
    halfRound_3_3 vec![gate_48[0], gate_48[1], gate_48[2]] vec![(8825275525296082671615660088137472022727508654813239986303576303490504107418:F), (1481125575303576470988538039195271612778457110700618040436600537924912146613:F), (16268684562967416784133317570130804847322980788316762518215429249893668424280:F)] fun gate_49 =>
    halfRound_3_3 vec![gate_49[0], gate_49[1], gate_49[2]] vec![(4681491452239189664806745521067158092729838954919425311759965958272644506354:F), (3131438137839074317765338377823608627360421824842227925080193892542578675835:F), (7930402370812046914611776451748034256998580373012248216998696754202474945793:F)] fun gate_50 =>
    halfRound_3_3 vec![gate_50[0], gate_50[1], gate_50[2]] vec![(8973151117361309058790078507956716669068786070949641445408234962176963060145:F), (10223139291409280771165469989652431067575076252562753663259473331031932716923:F), (2232089286698717316374057160056566551249777684520809735680538268209217819725:F)] fun gate_51 =>
    halfRound_3_3 vec![gate_51[0], gate_51[1], gate_51[2]] vec![(16930089744400890347392540468934821520000065594669279286854302439710657571308:F), (21739597952486540111798430281275997558482064077591840966152905690279247146674:F), (7508315029150148468008716674010060103310093296969466203204862163743615534994:F)] fun gate_52 =>
    halfRound_3_3 vec![gate_52[0], gate_52[1], gate_52[2]] vec![(11418894863682894988747041469969889669847284797234703818032750410328384432224:F), (10895338268862022698088163806301557188640023613155321294365781481663489837917:F), (18644184384117747990653304688839904082421784959872380449968500304556054962449:F)] fun gate_53 =>
    halfRound_3_3 vec![gate_53[0], gate_53[1], gate_53[2]] vec![(7414443845282852488299349772251184564170443662081877445177167932875038836497:F), (5391299369598751507276083947272874512197023231529277107201098701900193273851:F), (10329906873896253554985208009869159014028187242848161393978194008068001342262:F)] fun gate_54 =>
    halfRound_3_3 vec![gate_54[0], gate_54[1], gate_54[2]] vec![(4711719500416619550464783480084256452493890461073147512131129596065578741786:F), (11943219201565014805519989716407790139241726526989183705078747065985453201504:F), (4298705349772984837150885571712355513879480272326239023123910904259614053334:F)] fun gate_55 =>
    halfRound_3_3 vec![gate_55[0], gate_55[1], gate_55[2]] vec![(9999044003322463509208400801275356671266978396985433172455084837770460579627:F), (4908416131442887573991189028182614782884545304889259793974797565686968097291:F), (11963412684806827200577486696316210731159599844307091475104710684559519773777:F)] fun gate_56 =>
    halfRound_3_3 vec![gate_56[0], gate_56[1], gate_56[2]] vec![(20129916000261129180023520480843084814481184380399868943565043864970719708502:F), (12884788430473747619080473633364244616344003003135883061507342348586143092592:F), (20286808211545908191036106582330883564479538831989852602050135926112143921015:F)] fun gate_57 =>
    halfRound_3_3 vec![gate_57[0], gate_57[1], gate_57[2]] vec![(16282045180030846845043407450751207026423331632332114205316676731302016331498:F), (4332932669439410887701725251009073017227450696965904037736403407953448682093:F), (11105712698773407689561953778861118250080830258196150686012791790342360778288:F)] fun gate_58 =>
    halfRound_3_3 vec![gate_58[0], gate_58[1], gate_58[2]] vec![(21853934471586954540926699232107176721894655187276984175226220218852955976831:F), (9807888223112768841912392164376763820266226276821186661925633831143729724792:F), (13411808896854134882869416756427789378942943805153730705795307450368858622668:F)] fun gate_59 =>
    halfRound_3_3 vec![gate_59[0], gate_59[1], gate_59[2]] vec![(17906847067500673080192335286161014930416613104209700445088168479205894040011:F), (14554387648466176616800733804942239711702169161888492380425023505790070369632:F), (4264116751358967409634966292436919795665643055548061693088119780787376143967:F)] fun gate_60 =>
    fullRound_3_3 vec![gate_60[0], gate_60[1], gate_60[2]] vec![(2401104597023440271473786738539405349187326308074330930748109868990675625380:F), (12251645483867233248963286274239998200789646392205783056343767189806123148785:F), (15331181254680049984374210433775713530849624954688899814297733641575188164316:F)] fun gate_61 =>
    fullRound_3_3 vec![gate_61[0], gate_61[1], gate_61[2]] vec![(13108834590369183125338853868477110922788848506677889928217413952560148766472:F), (6843160824078397950058285123048455551935389277899379615286104657075620692224:F), (10151103286206275742153883485231683504642432930275602063393479013696349676320:F)] fun gate_62 =>
    fullRound_3_3 vec![gate_62[0], gate_62[1], gate_62[2]] vec![(7074320081443088514060123546121507442501369977071685257650287261047855962224:F), (11413928794424774638606755585641504971720734248726394295158115188173278890938:F), (7312756097842145322667451519888915975561412209738441762091369106604423801080:F)] fun gate_63 =>
    fullRound_3_3 vec![gate_63[0], gate_63[1], gate_63[2]] vec![(7181677521425162567568557182629489303281861794357882492140051324529826589361:F), (15123155547166304758320442783720138372005699143801247333941013553002921430306:F), (13409242754315411433193860530743374419854094495153957441316635981078068351329:F)] fun gate_64 =>
    k vec![gate_64[0], gate_64[1], gate_64[2]]

def Poseidon2 (In1: F) (In2: F) (k: F -> Prop): Prop :=
    poseidon_3 vec![(0:F), In1, In2] fun gate_0 =>
    k gate_0[0]

def ProofRound (Direction: F) (Hash: F) (Sibling: F) (k: F -> Prop): Prop :=
    Gates.is_bool Direction ∧
    ∃gate_1, Gates.select Direction Hash Sibling gate_1 ∧
    ∃gate_2, Gates.select Direction Sibling Hash gate_2 ∧
    Poseidon2 gate_1 gate_2 fun gate_3 =>
    k gate_3

def VerifyProof_31_30 (Proof: Vector F 31) (Path: Vector F 30) (k: F -> Prop): Prop :=
    ProofRound Path[0] Proof[1] Proof[0] fun gate_0 =>
    ProofRound Path[1] Proof[2] gate_0 fun gate_1 =>
    ProofRound Path[2] Proof[3] gate_1 fun gate_2 =>
    ProofRound Path[3] Proof[4] gate_2 fun gate_3 =>
    ProofRound Path[4] Proof[5] gate_3 fun gate_4 =>
    ProofRound Path[5] Proof[6] gate_4 fun gate_5 =>
    ProofRound Path[6] Proof[7] gate_5 fun gate_6 =>
    ProofRound Path[7] Proof[8] gate_6 fun gate_7 =>
    ProofRound Path[8] Proof[9] gate_7 fun gate_8 =>
    ProofRound Path[9] Proof[10] gate_8 fun gate_9 =>
    ProofRound Path[10] Proof[11] gate_9 fun gate_10 =>
    ProofRound Path[11] Proof[12] gate_10 fun gate_11 =>
    ProofRound Path[12] Proof[13] gate_11 fun gate_12 =>
    ProofRound Path[13] Proof[14] gate_12 fun gate_13 =>
    ProofRound Path[14] Proof[15] gate_13 fun gate_14 =>
    ProofRound Path[15] Proof[16] gate_14 fun gate_15 =>
    ProofRound Path[16] Proof[17] gate_15 fun gate_16 =>
    ProofRound Path[17] Proof[18] gate_16 fun gate_17 =>
    ProofRound Path[18] Proof[19] gate_17 fun gate_18 =>
    ProofRound Path[19] Proof[20] gate_18 fun gate_19 =>
    ProofRound Path[20] Proof[21] gate_19 fun gate_20 =>
    ProofRound Path[21] Proof[22] gate_20 fun gate_21 =>
    ProofRound Path[22] Proof[23] gate_21 fun gate_22 =>
    ProofRound Path[23] Proof[24] gate_22 fun gate_23 =>
    ProofRound Path[24] Proof[25] gate_23 fun gate_24 =>
    ProofRound Path[25] Proof[26] gate_24 fun gate_25 =>
    ProofRound Path[26] Proof[27] gate_25 fun gate_26 =>
    ProofRound Path[27] Proof[28] gate_26 fun gate_27 =>
    ProofRound Path[28] Proof[29] gate_27 fun gate_28 =>
    ProofRound Path[29] Proof[30] gate_28 fun gate_29 =>
    k gate_29

def InsertionRound_30_30 (Index: F) (Item: F) (PrevRoot: F) (Proof: Vector F 30) (k: F -> Prop): Prop :=
    ∃gate_0, Gates.to_binary Index 30 gate_0 ∧
    VerifyProof_31_30 vec![(0:F), Proof[0], Proof[1], Proof[2], Proof[3], Proof[4], Proof[5], Proof[6], Proof[7], Proof[8], Proof[9], Proof[10], Proof[11], Proof[12], Proof[13], Proof[14], Proof[15], Proof[16], Proof[17], Proof[18], Proof[19], Proof[20], Proof[21], Proof[22], Proof[23], Proof[24], Proof[25], Proof[26], Proof[27], Proof[28], Proof[29]] vec![gate_0[0], gate_0[1], gate_0[2], gate_0[3], gate_0[4], gate_0[5], gate_0[6], gate_0[7], gate_0[8], gate_0[9], gate_0[10], gate_0[11], gate_0[12], gate_0[13], gate_0[14], gate_0[15], gate_0[16], gate_0[17], gate_0[18], gate_0[19], gate_0[20], gate_0[21], gate_0[22], gate_0[23], gate_0[24], gate_0[25], gate_0[26], gate_0[27], gate_0[28], gate_0[29]] fun gate_1 =>
    Gates.eq gate_1 PrevRoot ∧
    VerifyProof_31_30 vec![Item, Proof[0], Proof[1], Proof[2], Proof[3], Proof[4], Proof[5], Proof[6], Proof[7], Proof[8], Proof[9], Proof[10], Proof[11], Proof[12], Proof[13], Proof[14], Proof[15], Proof[16], Proof[17], Proof[18], Proof[19], Proof[20], Proof[21], Proof[22], Proof[23], Proof[24], Proof[25], Proof[26], Proof[27], Proof[28], Proof[29]] vec![gate_0[0], gate_0[1], gate_0[2], gate_0[3], gate_0[4], gate_0[5], gate_0[6], gate_0[7], gate_0[8], gate_0[9], gate_0[10], gate_0[11], gate_0[12], gate_0[13], gate_0[14], gate_0[15], gate_0[16], gate_0[17], gate_0[18], gate_0[19], gate_0[20], gate_0[21], gate_0[22], gate_0[23], gate_0[24], gate_0[25], gate_0[26], gate_0[27], gate_0[28], gate_0[29]] fun gate_3 =>
    k gate_3

def InsertionProof_4_30_4_4_30 (StartIndex: F) (PreRoot: F) (IdComms: Vector F 4) (MerkleProofs: Vector (Vector F 30) 4) (k: F -> Prop): Prop :=
    ∃gate_0, gate_0 = Gates.add StartIndex (0:F) ∧
    InsertionRound_30_30 gate_0 IdComms[0] PreRoot vec![MerkleProofs[0][0], MerkleProofs[0][1], MerkleProofs[0][2], MerkleProofs[0][3], MerkleProofs[0][4], MerkleProofs[0][5], MerkleProofs[0][6], MerkleProofs[0][7], MerkleProofs[0][8], MerkleProofs[0][9], MerkleProofs[0][10], MerkleProofs[0][11], MerkleProofs[0][12], MerkleProofs[0][13], MerkleProofs[0][14], MerkleProofs[0][15], MerkleProofs[0][16], MerkleProofs[0][17], MerkleProofs[0][18], MerkleProofs[0][19], MerkleProofs[0][20], MerkleProofs[0][21], MerkleProofs[0][22], MerkleProofs[0][23], MerkleProofs[0][24], MerkleProofs[0][25], MerkleProofs[0][26], MerkleProofs[0][27], MerkleProofs[0][28], MerkleProofs[0][29]] fun gate_1 =>
    ∃gate_2, gate_2 = Gates.add StartIndex (1:F) ∧
    InsertionRound_30_30 gate_2 IdComms[1] gate_1 vec![MerkleProofs[1][0], MerkleProofs[1][1], MerkleProofs[1][2], MerkleProofs[1][3], MerkleProofs[1][4], MerkleProofs[1][5], MerkleProofs[1][6], MerkleProofs[1][7], MerkleProofs[1][8], MerkleProofs[1][9], MerkleProofs[1][10], MerkleProofs[1][11], MerkleProofs[1][12], MerkleProofs[1][13], MerkleProofs[1][14], MerkleProofs[1][15], MerkleProofs[1][16], MerkleProofs[1][17], MerkleProofs[1][18], MerkleProofs[1][19], MerkleProofs[1][20], MerkleProofs[1][21], MerkleProofs[1][22], MerkleProofs[1][23], MerkleProofs[1][24], MerkleProofs[1][25], MerkleProofs[1][26], MerkleProofs[1][27], MerkleProofs[1][28], MerkleProofs[1][29]] fun gate_3 =>
    ∃gate_4, gate_4 = Gates.add StartIndex (2:F) ∧
    InsertionRound_30_30 gate_4 IdComms[2] gate_3 vec![MerkleProofs[2][0], MerkleProofs[2][1], MerkleProofs[2][2], MerkleProofs[2][3], MerkleProofs[2][4], MerkleProofs[2][5], MerkleProofs[2][6], MerkleProofs[2][7], MerkleProofs[2][8], MerkleProofs[2][9], MerkleProofs[2][10], MerkleProofs[2][11], MerkleProofs[2][12], MerkleProofs[2][13], MerkleProofs[2][14], MerkleProofs[2][15], MerkleProofs[2][16], MerkleProofs[2][17], MerkleProofs[2][18], MerkleProofs[2][19], MerkleProofs[2][20], MerkleProofs[2][21], MerkleProofs[2][22], MerkleProofs[2][23], MerkleProofs[2][24], MerkleProofs[2][25], MerkleProofs[2][26], MerkleProofs[2][27], MerkleProofs[2][28], MerkleProofs[2][29]] fun gate_5 =>
    ∃gate_6, gate_6 = Gates.add StartIndex (3:F) ∧
    InsertionRound_30_30 gate_6 IdComms[3] gate_5 vec![MerkleProofs[3][0], MerkleProofs[3][1], MerkleProofs[3][2], MerkleProofs[3][3], MerkleProofs[3][4], MerkleProofs[3][5], MerkleProofs[3][6], MerkleProofs[3][7], MerkleProofs[3][8], MerkleProofs[3][9], MerkleProofs[3][10], MerkleProofs[3][11], MerkleProofs[3][12], MerkleProofs[3][13], MerkleProofs[3][14], MerkleProofs[3][15], MerkleProofs[3][16], MerkleProofs[3][17], MerkleProofs[3][18], MerkleProofs[3][19], MerkleProofs[3][20], MerkleProofs[3][21], MerkleProofs[3][22], MerkleProofs[3][23], MerkleProofs[3][24], MerkleProofs[3][25], MerkleProofs[3][26], MerkleProofs[3][27], MerkleProofs[3][28], MerkleProofs[3][29]] fun gate_7 =>
    k gate_7

def DeletionRound_30_30 (Root: F) (Index: F) (Item: F) (MerkleProofs: Vector F 30) (k: F -> Prop): Prop :=
    ∃gate_0, Gates.to_binary Index 30 gate_0 ∧
    VerifyProof_31_30 vec![Item, MerkleProofs[0], MerkleProofs[1], MerkleProofs[2], MerkleProofs[3], MerkleProofs[4], MerkleProofs[5], MerkleProofs[6], MerkleProofs[7], MerkleProofs[8], MerkleProofs[9], MerkleProofs[10], MerkleProofs[11], MerkleProofs[12], MerkleProofs[13], MerkleProofs[14], MerkleProofs[15], MerkleProofs[16], MerkleProofs[17], MerkleProofs[18], MerkleProofs[19], MerkleProofs[20], MerkleProofs[21], MerkleProofs[22], MerkleProofs[23], MerkleProofs[24], MerkleProofs[25], MerkleProofs[26], MerkleProofs[27], MerkleProofs[28], MerkleProofs[29]] vec![gate_0[0], gate_0[1], gate_0[2], gate_0[3], gate_0[4], gate_0[5], gate_0[6], gate_0[7], gate_0[8], gate_0[9], gate_0[10], gate_0[11], gate_0[12], gate_0[13], gate_0[14], gate_0[15], gate_0[16], gate_0[17], gate_0[18], gate_0[19], gate_0[20], gate_0[21], gate_0[22], gate_0[23], gate_0[24], gate_0[25], gate_0[26], gate_0[27], gate_0[28], gate_0[29]] fun gate_1 =>
    Gates.eq gate_1 Root ∧
    VerifyProof_31_30 vec![(0:F), MerkleProofs[0], MerkleProofs[1], MerkleProofs[2], MerkleProofs[3], MerkleProofs[4], MerkleProofs[5], MerkleProofs[6], MerkleProofs[7], MerkleProofs[8], MerkleProofs[9], MerkleProofs[10], MerkleProofs[11], MerkleProofs[12], MerkleProofs[13], MerkleProofs[14], MerkleProofs[15], MerkleProofs[16], MerkleProofs[17], MerkleProofs[18], MerkleProofs[19], MerkleProofs[20], MerkleProofs[21], MerkleProofs[22], MerkleProofs[23], MerkleProofs[24], MerkleProofs[25], MerkleProofs[26], MerkleProofs[27], MerkleProofs[28], MerkleProofs[29]] vec![gate_0[0], gate_0[1], gate_0[2], gate_0[3], gate_0[4], gate_0[5], gate_0[6], gate_0[7], gate_0[8], gate_0[9], gate_0[10], gate_0[11], gate_0[12], gate_0[13], gate_0[14], gate_0[15], gate_0[16], gate_0[17], gate_0[18], gate_0[19], gate_0[20], gate_0[21], gate_0[22], gate_0[23], gate_0[24], gate_0[25], gate_0[26], gate_0[27], gate_0[28], gate_0[29]] fun gate_3 =>
    k gate_3

def DeletionProof_4_4_30_4_4_30 (DeletionIndices: Vector F 4) (PreRoot: F) (IdComms: Vector F 4) (MerkleProofs: Vector (Vector F 30) 4) (k: F -> Prop): Prop :=
    DeletionRound_30_30 PreRoot DeletionIndices[0] IdComms[0] vec![MerkleProofs[0][0], MerkleProofs[0][1], MerkleProofs[0][2], MerkleProofs[0][3], MerkleProofs[0][4], MerkleProofs[0][5], MerkleProofs[0][6], MerkleProofs[0][7], MerkleProofs[0][8], MerkleProofs[0][9], MerkleProofs[0][10], MerkleProofs[0][11], MerkleProofs[0][12], MerkleProofs[0][13], MerkleProofs[0][14], MerkleProofs[0][15], MerkleProofs[0][16], MerkleProofs[0][17], MerkleProofs[0][18], MerkleProofs[0][19], MerkleProofs[0][20], MerkleProofs[0][21], MerkleProofs[0][22], MerkleProofs[0][23], MerkleProofs[0][24], MerkleProofs[0][25], MerkleProofs[0][26], MerkleProofs[0][27], MerkleProofs[0][28], MerkleProofs[0][29]] fun gate_0 =>
    DeletionRound_30_30 gate_0 DeletionIndices[1] IdComms[1] vec![MerkleProofs[1][0], MerkleProofs[1][1], MerkleProofs[1][2], MerkleProofs[1][3], MerkleProofs[1][4], MerkleProofs[1][5], MerkleProofs[1][6], MerkleProofs[1][7], MerkleProofs[1][8], MerkleProofs[1][9], MerkleProofs[1][10], MerkleProofs[1][11], MerkleProofs[1][12], MerkleProofs[1][13], MerkleProofs[1][14], MerkleProofs[1][15], MerkleProofs[1][16], MerkleProofs[1][17], MerkleProofs[1][18], MerkleProofs[1][19], MerkleProofs[1][20], MerkleProofs[1][21], MerkleProofs[1][22], MerkleProofs[1][23], MerkleProofs[1][24], MerkleProofs[1][25], MerkleProofs[1][26], MerkleProofs[1][27], MerkleProofs[1][28], MerkleProofs[1][29]] fun gate_1 =>
    DeletionRound_30_30 gate_1 DeletionIndices[2] IdComms[2] vec![MerkleProofs[2][0], MerkleProofs[2][1], MerkleProofs[2][2], MerkleProofs[2][3], MerkleProofs[2][4], MerkleProofs[2][5], MerkleProofs[2][6], MerkleProofs[2][7], MerkleProofs[2][8], MerkleProofs[2][9], MerkleProofs[2][10], MerkleProofs[2][11], MerkleProofs[2][12], MerkleProofs[2][13], MerkleProofs[2][14], MerkleProofs[2][15], MerkleProofs[2][16], MerkleProofs[2][17], MerkleProofs[2][18], MerkleProofs[2][19], MerkleProofs[2][20], MerkleProofs[2][21], MerkleProofs[2][22], MerkleProofs[2][23], MerkleProofs[2][24], MerkleProofs[2][25], MerkleProofs[2][26], MerkleProofs[2][27], MerkleProofs[2][28], MerkleProofs[2][29]] fun gate_2 =>
    DeletionRound_30_30 gate_2 DeletionIndices[3] IdComms[3] vec![MerkleProofs[3][0], MerkleProofs[3][1], MerkleProofs[3][2], MerkleProofs[3][3], MerkleProofs[3][4], MerkleProofs[3][5], MerkleProofs[3][6], MerkleProofs[3][7], MerkleProofs[3][8], MerkleProofs[3][9], MerkleProofs[3][10], MerkleProofs[3][11], MerkleProofs[3][12], MerkleProofs[3][13], MerkleProofs[3][14], MerkleProofs[3][15], MerkleProofs[3][16], MerkleProofs[3][17], MerkleProofs[3][18], MerkleProofs[3][19], MerkleProofs[3][20], MerkleProofs[3][21], MerkleProofs[3][22], MerkleProofs[3][23], MerkleProofs[3][24], MerkleProofs[3][25], MerkleProofs[3][26], MerkleProofs[3][27], MerkleProofs[3][28], MerkleProofs[3][29]] fun gate_3 =>
    k gate_3

def ReducedModRCheck_32 (Input: Vector F 32) : Prop :=
    True

def ToReducedBigEndianGadget_32 (Variable: F) (k: Vector F 32 -> Prop): Prop :=
    ∃gate_0, Gates.to_binary Variable 32 gate_0 ∧
    ReducedModRCheck_32 vec![gate_0[0], gate_0[1], gate_0[2], gate_0[3], gate_0[4], gate_0[5], gate_0[6], gate_0[7], gate_0[8], gate_0[9], gate_0[10], gate_0[11], gate_0[12], gate_0[13], gate_0[14], gate_0[15], gate_0[16], gate_0[17], gate_0[18], gate_0[19], gate_0[20], gate_0[21], gate_0[22], gate_0[23], gate_0[24], gate_0[25], gate_0[26], gate_0[27], gate_0[28], gate_0[29], gate_0[30], gate_0[31]] ∧
    k vec![gate_0[0], gate_0[1], gate_0[2], gate_0[3], gate_0[4], gate_0[5], gate_0[6], gate_0[7], gate_0[8], gate_0[9], gate_0[10], gate_0[11], gate_0[12], gate_0[13], gate_0[14], gate_0[15], gate_0[16], gate_0[17], gate_0[18], gate_0[19], gate_0[20], gate_0[21], gate_0[22], gate_0[23], gate_0[24], gate_0[25], gate_0[26], gate_0[27], gate_0[28], gate_0[29], gate_0[30], gate_0[31]]

def ReducedModRCheck_256 (Input: Vector F 256) : Prop :=
    Gates.is_bool Input[255] ∧
    ∃gate_1, Gates.or Input[255] (0:F) gate_1 ∧
    ∃gate_2, Gates.select (0:F) (0:F) gate_1 gate_2 ∧
    Gates.is_bool Input[254] ∧
    ∃gate_4, Gates.or Input[254] gate_2 gate_4 ∧
    ∃gate_5, Gates.select (0:F) (0:F) gate_4 gate_5 ∧
    Gates.is_bool Input[253] ∧
    ∃gate_7, gate_7 = Gates.sub (1:F) Input[253] ∧
    ∃gate_8, Gates.or gate_7 (0:F) gate_8 ∧
    ∃gate_9, Gates.select gate_5 (0:F) gate_8 gate_9 ∧
    Gates.is_bool Input[252] ∧
    ∃gate_11, gate_11 = Gates.sub (1:F) Input[252] ∧
    ∃gate_12, Gates.or gate_11 gate_9 gate_12 ∧
    ∃gate_13, Gates.select gate_5 (0:F) gate_12 gate_13 ∧
    Gates.is_bool Input[251] ∧
    ∃gate_15, Gates.or Input[251] gate_5 gate_15 ∧
    ∃gate_16, Gates.select gate_13 (0:F) gate_15 gate_16 ∧
    Gates.is_bool Input[250] ∧
    ∃gate_18, Gates.or Input[250] gate_16 gate_18 ∧
    ∃gate_19, Gates.select gate_13 (0:F) gate_18 gate_19 ∧
    Gates.is_bool Input[249] ∧
    ∃gate_21, Gates.or Input[249] gate_19 gate_21 ∧
    ∃gate_22, Gates.select gate_13 (0:F) gate_21 gate_22 ∧
    Gates.is_bool Input[248] ∧
    ∃gate_24, Gates.or Input[248] gate_22 gate_24 ∧
    ∃gate_25, Gates.select gate_13 (0:F) gate_24 gate_25 ∧
    Gates.is_bool Input[247] ∧
    ∃gate_27, Gates.or Input[247] gate_25 gate_27 ∧
    ∃gate_28, Gates.select gate_13 (0:F) gate_27 gate_28 ∧
    Gates.is_bool Input[246] ∧
    ∃gate_30, gate_30 = Gates.sub (1:F) Input[246] ∧
    ∃gate_31, Gates.or gate_30 gate_13 gate_31 ∧
    ∃gate_32, Gates.select gate_28 (0:F) gate_31 gate_32 ∧
    Gates.is_bool Input[245] ∧
    ∃gate_34, gate_34 = Gates.sub (1:F) Input[245] ∧
    ∃gate_35, Gates.or gate_34 gate_32 gate_35 ∧
    ∃gate_36, Gates.select gate_28 (0:F) gate_35 gate_36 ∧
    Gates.is_bool Input[244] ∧
    ∃gate_38, Gates.or Input[244] gate_28 gate_38 ∧
    ∃gate_39, Gates.select gate_36 (0:F) gate_38 gate_39 ∧
    Gates.is_bool Input[243] ∧
    ∃gate_41, Gates.or Input[243] gate_39 gate_41 ∧
    ∃gate_42, Gates.select gate_36 (0:F) gate_41 gate_42 ∧
    Gates.is_bool Input[242] ∧
    ∃gate_44, gate_44 = Gates.sub (1:F) Input[242] ∧
    ∃gate_45, Gates.or gate_44 gate_36 gate_45 ∧
    ∃gate_46, Gates.select gate_42 (0:F) gate_45 gate_46 ∧
    Gates.is_bool Input[241] ∧
    ∃gate_48, Gates.or Input[241] gate_42 gate_48 ∧
    ∃gate_49, Gates.select gate_46 (0:F) gate_48 gate_49 ∧
    Gates.is_bool Input[240] ∧
    ∃gate_51, Gates.or Input[240] gate_49 gate_51 ∧
    ∃gate_52, Gates.select gate_46 (0:F) gate_51 gate_52 ∧
    Gates.is_bool Input[239] ∧
    ∃gate_54, Gates.or Input[239] gate_52 gate_54 ∧
    ∃gate_55, Gates.select gate_46 (0:F) gate_54 gate_55 ∧
    Gates.is_bool Input[238] ∧
    ∃gate_57, gate_57 = Gates.sub (1:F) Input[238] ∧
    ∃gate_58, Gates.or gate_57 gate_46 gate_58 ∧
    ∃gate_59, Gates.select gate_55 (0:F) gate_58 gate_59 ∧
    Gates.is_bool Input[237] ∧
    ∃gate_61, Gates.or Input[237] gate_55 gate_61 ∧
    ∃gate_62, Gates.select gate_59 (0:F) gate_61 gate_62 ∧
    Gates.is_bool Input[236] ∧
    ∃gate_64, Gates.or Input[236] gate_62 gate_64 ∧
    ∃gate_65, Gates.select gate_59 (0:F) gate_64 gate_65 ∧
    Gates.is_bool Input[235] ∧
    ∃gate_67, gate_67 = Gates.sub (1:F) Input[235] ∧
    ∃gate_68, Gates.or gate_67 gate_59 gate_68 ∧
    ∃gate_69, Gates.select gate_65 (0:F) gate_68 gate_69 ∧
    Gates.is_bool Input[234] ∧
    ∃gate_71, gate_71 = Gates.sub (1:F) Input[234] ∧
    ∃gate_72, Gates.or gate_71 gate_69 gate_72 ∧
    ∃gate_73, Gates.select gate_65 (0:F) gate_72 gate_73 ∧
    Gates.is_bool Input[233] ∧
    ∃gate_75, gate_75 = Gates.sub (1:F) Input[233] ∧
    ∃gate_76, Gates.or gate_75 gate_73 gate_76 ∧
    ∃gate_77, Gates.select gate_65 (0:F) gate_76 gate_77 ∧
    Gates.is_bool Input[232] ∧
    ∃gate_79, Gates.or Input[232] gate_65 gate_79 ∧
    ∃gate_80, Gates.select gate_77 (0:F) gate_79 gate_80 ∧
    Gates.is_bool Input[231] ∧
    ∃gate_82, Gates.or Input[231] gate_80 gate_82 ∧
    ∃gate_83, Gates.select gate_77 (0:F) gate_82 gate_83 ∧
    Gates.is_bool Input[230] ∧
    ∃gate_85, gate_85 = Gates.sub (1:F) Input[230] ∧
    ∃gate_86, Gates.or gate_85 gate_77 gate_86 ∧
    ∃gate_87, Gates.select gate_83 (0:F) gate_86 gate_87 ∧
    Gates.is_bool Input[229] ∧
    ∃gate_89, gate_89 = Gates.sub (1:F) Input[229] ∧
    ∃gate_90, Gates.or gate_89 gate_87 gate_90 ∧
    ∃gate_91, Gates.select gate_83 (0:F) gate_90 gate_91 ∧
    Gates.is_bool Input[228] ∧
    ∃gate_93, gate_93 = Gates.sub (1:F) Input[228] ∧
    ∃gate_94, Gates.or gate_93 gate_91 gate_94 ∧
    ∃gate_95, Gates.select gate_83 (0:F) gate_94 gate_95 ∧
    Gates.is_bool Input[227] ∧
    ∃gate_97, Gates.or Input[227] gate_83 gate_97 ∧
    ∃gate_98, Gates.select gate_95 (0:F) gate_97 gate_98 ∧
    Gates.is_bool Input[226] ∧
    ∃gate_100, Gates.or Input[226] gate_98 gate_100 ∧
    ∃gate_101, Gates.select gate_95 (0:F) gate_100 gate_101 ∧
    Gates.is_bool Input[225] ∧
    ∃gate_103, gate_103 = Gates.sub (1:F) Input[225] ∧
    ∃gate_104, Gates.or gate_103 gate_95 gate_104 ∧
    ∃gate_105, Gates.select gate_101 (0:F) gate_104 gate_105 ∧
    Gates.is_bool Input[224] ∧
    ∃gate_107, Gates.or Input[224] gate_101 gate_107 ∧
    ∃gate_108, Gates.select gate_105 (0:F) gate_107 gate_108 ∧
    Gates.is_bool Input[223] ∧
    ∃gate_110, gate_110 = Gates.sub (1:F) Input[223] ∧
    ∃gate_111, Gates.or gate_110 gate_105 gate_111 ∧
    ∃gate_112, Gates.select gate_108 (0:F) gate_111 gate_112 ∧
    Gates.is_bool Input[222] ∧
    ∃gate_114, gate_114 = Gates.sub (1:F) Input[222] ∧
    ∃gate_115, Gates.or gate_114 gate_112 gate_115 ∧
    ∃gate_116, Gates.select gate_108 (0:F) gate_115 gate_116 ∧
    Gates.is_bool Input[221] ∧
    ∃gate_118, gate_118 = Gates.sub (1:F) Input[221] ∧
    ∃gate_119, Gates.or gate_118 gate_116 gate_119 ∧
    ∃gate_120, Gates.select gate_108 (0:F) gate_119 gate_120 ∧
    Gates.is_bool Input[220] ∧
    ∃gate_122, Gates.or Input[220] gate_108 gate_122 ∧
    ∃gate_123, Gates.select gate_120 (0:F) gate_122 gate_123 ∧
    Gates.is_bool Input[219] ∧
    ∃gate_125, Gates.or Input[219] gate_123 gate_125 ∧
    ∃gate_126, Gates.select gate_120 (0:F) gate_125 gate_126 ∧
    Gates.is_bool Input[218] ∧
    ∃gate_128, Gates.or Input[218] gate_126 gate_128 ∧
    ∃gate_129, Gates.select gate_120 (0:F) gate_128 gate_129 ∧
    Gates.is_bool Input[217] ∧
    ∃gate_131, Gates.or Input[217] gate_129 gate_131 ∧
    ∃gate_132, Gates.select gate_120 (0:F) gate_131 gate_132 ∧
    Gates.is_bool Input[216] ∧
    ∃gate_134, gate_134 = Gates.sub (1:F) Input[216] ∧
    ∃gate_135, Gates.or gate_134 gate_120 gate_135 ∧
    ∃gate_136, Gates.select gate_132 (0:F) gate_135 gate_136 ∧
    Gates.is_bool Input[215] ∧
    ∃gate_138, Gates.or Input[215] gate_132 gate_138 ∧
    ∃gate_139, Gates.select gate_136 (0:F) gate_138 gate_139 ∧
    Gates.is_bool Input[214] ∧
    ∃gate_141, Gates.or Input[214] gate_139 gate_141 ∧
    ∃gate_142, Gates.select gate_136 (0:F) gate_141 gate_142 ∧
    Gates.is_bool Input[213] ∧
    ∃gate_144, gate_144 = Gates.sub (1:F) Input[213] ∧
    ∃gate_145, Gates.or gate_144 gate_136 gate_145 ∧
    ∃gate_146, Gates.select gate_142 (0:F) gate_145 gate_146 ∧
    Gates.is_bool Input[212] ∧
    ∃gate_148, gate_148 = Gates.sub (1:F) Input[212] ∧
    ∃gate_149, Gates.or gate_148 gate_146 gate_149 ∧
    ∃gate_150, Gates.select gate_142 (0:F) gate_149 gate_150 ∧
    Gates.is_bool Input[211] ∧
    ∃gate_152, Gates.or Input[211] gate_142 gate_152 ∧
    ∃gate_153, Gates.select gate_150 (0:F) gate_152 gate_153 ∧
    Gates.is_bool Input[210] ∧
    ∃gate_155, Gates.or Input[210] gate_153 gate_155 ∧
    ∃gate_156, Gates.select gate_150 (0:F) gate_155 gate_156 ∧
    Gates.is_bool Input[209] ∧
    ∃gate_158, Gates.or Input[209] gate_156 gate_158 ∧
    ∃gate_159, Gates.select gate_150 (0:F) gate_158 gate_159 ∧
    Gates.is_bool Input[208] ∧
    ∃gate_161, gate_161 = Gates.sub (1:F) Input[208] ∧
    ∃gate_162, Gates.or gate_161 gate_150 gate_162 ∧
    ∃gate_163, Gates.select gate_159 (0:F) gate_162 gate_163 ∧
    Gates.is_bool Input[207] ∧
    ∃gate_165, gate_165 = Gates.sub (1:F) Input[207] ∧
    ∃gate_166, Gates.or gate_165 gate_163 gate_166 ∧
    ∃gate_167, Gates.select gate_159 (0:F) gate_166 gate_167 ∧
    Gates.is_bool Input[206] ∧
    ∃gate_169, Gates.or Input[206] gate_159 gate_169 ∧
    ∃gate_170, Gates.select gate_167 (0:F) gate_169 gate_170 ∧
    Gates.is_bool Input[205] ∧
    ∃gate_172, gate_172 = Gates.sub (1:F) Input[205] ∧
    ∃gate_173, Gates.or gate_172 gate_167 gate_173 ∧
    ∃gate_174, Gates.select gate_170 (0:F) gate_173 gate_174 ∧
    Gates.is_bool Input[204] ∧
    ∃gate_176, Gates.or Input[204] gate_170 gate_176 ∧
    ∃gate_177, Gates.select gate_174 (0:F) gate_176 gate_177 ∧
    Gates.is_bool Input[203] ∧
    ∃gate_179, Gates.or Input[203] gate_177 gate_179 ∧
    ∃gate_180, Gates.select gate_174 (0:F) gate_179 gate_180 ∧
    Gates.is_bool Input[202] ∧
    ∃gate_182, Gates.or Input[202] gate_180 gate_182 ∧
    ∃gate_183, Gates.select gate_174 (0:F) gate_182 gate_183 ∧
    Gates.is_bool Input[201] ∧
    ∃gate_185, Gates.or Input[201] gate_183 gate_185 ∧
    ∃gate_186, Gates.select gate_174 (0:F) gate_185 gate_186 ∧
    Gates.is_bool Input[200] ∧
    ∃gate_188, Gates.or Input[200] gate_186 gate_188 ∧
    ∃gate_189, Gates.select gate_174 (0:F) gate_188 gate_189 ∧
    Gates.is_bool Input[199] ∧
    ∃gate_191, Gates.or Input[199] gate_189 gate_191 ∧
    ∃gate_192, Gates.select gate_174 (0:F) gate_191 gate_192 ∧
    Gates.is_bool Input[198] ∧
    ∃gate_194, Gates.or Input[198] gate_192 gate_194 ∧
    ∃gate_195, Gates.select gate_174 (0:F) gate_194 gate_195 ∧
    Gates.is_bool Input[197] ∧
    ∃gate_197, gate_197 = Gates.sub (1:F) Input[197] ∧
    ∃gate_198, Gates.or gate_197 gate_174 gate_198 ∧
    ∃gate_199, Gates.select gate_195 (0:F) gate_198 gate_199 ∧
    Gates.is_bool Input[196] ∧
    ∃gate_201, Gates.or Input[196] gate_195 gate_201 ∧
    ∃gate_202, Gates.select gate_199 (0:F) gate_201 gate_202 ∧
    Gates.is_bool Input[195] ∧
    ∃gate_204, gate_204 = Gates.sub (1:F) Input[195] ∧
    ∃gate_205, Gates.or gate_204 gate_199 gate_205 ∧
    ∃gate_206, Gates.select gate_202 (0:F) gate_205 gate_206 ∧
    Gates.is_bool Input[194] ∧
    ∃gate_208, Gates.or Input[194] gate_202 gate_208 ∧
    ∃gate_209, Gates.select gate_206 (0:F) gate_208 gate_209 ∧
    Gates.is_bool Input[193] ∧
    ∃gate_211, Gates.or Input[193] gate_209 gate_211 ∧
    ∃gate_212, Gates.select gate_206 (0:F) gate_211 gate_212 ∧
    Gates.is_bool Input[192] ∧
    ∃gate_214, gate_214 = Gates.sub (1:F) Input[192] ∧
    ∃gate_215, Gates.or gate_214 gate_206 gate_215 ∧
    ∃gate_216, Gates.select gate_212 (0:F) gate_215 gate_216 ∧
    Gates.is_bool Input[191] ∧
    ∃gate_218, gate_218 = Gates.sub (1:F) Input[191] ∧
    ∃gate_219, Gates.or gate_218 gate_216 gate_219 ∧
    ∃gate_220, Gates.select gate_212 (0:F) gate_219 gate_220 ∧
    Gates.is_bool Input[190] ∧
    ∃gate_222, Gates.or Input[190] gate_212 gate_222 ∧
    ∃gate_223, Gates.select gate_220 (0:F) gate_222 gate_223 ∧
    Gates.is_bool Input[189] ∧
    ∃gate_225, gate_225 = Gates.sub (1:F) Input[189] ∧
    ∃gate_226, Gates.or gate_225 gate_220 gate_226 ∧
    ∃gate_227, Gates.select gate_223 (0:F) gate_226 gate_227 ∧
    Gates.is_bool Input[188] ∧
    ∃gate_229, gate_229 = Gates.sub (1:F) Input[188] ∧
    ∃gate_230, Gates.or gate_229 gate_227 gate_230 ∧
    ∃gate_231, Gates.select gate_223 (0:F) gate_230 gate_231 ∧
    Gates.is_bool Input[187] ∧
    ∃gate_233, gate_233 = Gates.sub (1:F) Input[187] ∧
    ∃gate_234, Gates.or gate_233 gate_231 gate_234 ∧
    ∃gate_235, Gates.select gate_223 (0:F) gate_234 gate_235 ∧
    Gates.is_bool Input[186] ∧
    ∃gate_237, Gates.or Input[186] gate_223 gate_237 ∧
    ∃gate_238, Gates.select gate_235 (0:F) gate_237 gate_238 ∧
    Gates.is_bool Input[185] ∧
    ∃gate_240, Gates.or Input[185] gate_238 gate_240 ∧
    ∃gate_241, Gates.select gate_235 (0:F) gate_240 gate_241 ∧
    Gates.is_bool Input[184] ∧
    ∃gate_243, Gates.or Input[184] gate_241 gate_243 ∧
    ∃gate_244, Gates.select gate_235 (0:F) gate_243 gate_244 ∧
    Gates.is_bool Input[183] ∧
    ∃gate_246, Gates.or Input[183] gate_244 gate_246 ∧
    ∃gate_247, Gates.select gate_235 (0:F) gate_246 gate_247 ∧
    Gates.is_bool Input[182] ∧
    ∃gate_249, gate_249 = Gates.sub (1:F) Input[182] ∧
    ∃gate_250, Gates.or gate_249 gate_235 gate_250 ∧
    ∃gate_251, Gates.select gate_247 (0:F) gate_250 gate_251 ∧
    Gates.is_bool Input[181] ∧
    ∃gate_253, Gates.or Input[181] gate_247 gate_253 ∧
    ∃gate_254, Gates.select gate_251 (0:F) gate_253 gate_254 ∧
    Gates.is_bool Input[180] ∧
    ∃gate_256, gate_256 = Gates.sub (1:F) Input[180] ∧
    ∃gate_257, Gates.or gate_256 gate_251 gate_257 ∧
    ∃gate_258, Gates.select gate_254 (0:F) gate_257 gate_258 ∧
    Gates.is_bool Input[179] ∧
    ∃gate_260, Gates.or Input[179] gate_254 gate_260 ∧
    ∃gate_261, Gates.select gate_258 (0:F) gate_260 gate_261 ∧
    Gates.is_bool Input[178] ∧
    ∃gate_263, Gates.or Input[178] gate_261 gate_263 ∧
    ∃gate_264, Gates.select gate_258 (0:F) gate_263 gate_264 ∧
    Gates.is_bool Input[177] ∧
    ∃gate_266, Gates.or Input[177] gate_264 gate_266 ∧
    ∃gate_267, Gates.select gate_258 (0:F) gate_266 gate_267 ∧
    Gates.is_bool Input[176] ∧
    ∃gate_269, Gates.or Input[176] gate_267 gate_269 ∧
    ∃gate_270, Gates.select gate_258 (0:F) gate_269 gate_270 ∧
    Gates.is_bool Input[175] ∧
    ∃gate_272, Gates.or Input[175] gate_270 gate_272 ∧
    ∃gate_273, Gates.select gate_258 (0:F) gate_272 gate_273 ∧
    Gates.is_bool Input[174] ∧
    ∃gate_275, gate_275 = Gates.sub (1:F) Input[174] ∧
    ∃gate_276, Gates.or gate_275 gate_258 gate_276 ∧
    ∃gate_277, Gates.select gate_273 (0:F) gate_276 gate_277 ∧
    Gates.is_bool Input[173] ∧
    ∃gate_279, Gates.or Input[173] gate_273 gate_279 ∧
    ∃gate_280, Gates.select gate_277 (0:F) gate_279 gate_280 ∧
    Gates.is_bool Input[172] ∧
    ∃gate_282, Gates.or Input[172] gate_280 gate_282 ∧
    ∃gate_283, Gates.select gate_277 (0:F) gate_282 gate_283 ∧
    Gates.is_bool Input[171] ∧
    ∃gate_285, Gates.or Input[171] gate_283 gate_285 ∧
    ∃gate_286, Gates.select gate_277 (0:F) gate_285 gate_286 ∧
    Gates.is_bool Input[170] ∧
    ∃gate_288, gate_288 = Gates.sub (1:F) Input[170] ∧
    ∃gate_289, Gates.or gate_288 gate_277 gate_289 ∧
    ∃gate_290, Gates.select gate_286 (0:F) gate_289 gate_290 ∧
    Gates.is_bool Input[169] ∧
    ∃gate_292, Gates.or Input[169] gate_286 gate_292 ∧
    ∃gate_293, Gates.select gate_290 (0:F) gate_292 gate_293 ∧
    Gates.is_bool Input[168] ∧
    ∃gate_295, gate_295 = Gates.sub (1:F) Input[168] ∧
    ∃gate_296, Gates.or gate_295 gate_290 gate_296 ∧
    ∃gate_297, Gates.select gate_293 (0:F) gate_296 gate_297 ∧
    Gates.is_bool Input[167] ∧
    ∃gate_299, gate_299 = Gates.sub (1:F) Input[167] ∧
    ∃gate_300, Gates.or gate_299 gate_297 gate_300 ∧
    ∃gate_301, Gates.select gate_293 (0:F) gate_300 gate_301 ∧
    Gates.is_bool Input[166] ∧
    ∃gate_303, Gates.or Input[166] gate_293 gate_303 ∧
    ∃gate_304, Gates.select gate_301 (0:F) gate_303 gate_304 ∧
    Gates.is_bool Input[165] ∧
    ∃gate_306, gate_306 = Gates.sub (1:F) Input[165] ∧
    ∃gate_307, Gates.or gate_306 gate_301 gate_307 ∧
    ∃gate_308, Gates.select gate_304 (0:F) gate_307 gate_308 ∧
    Gates.is_bool Input[164] ∧
    ∃gate_310, gate_310 = Gates.sub (1:F) Input[164] ∧
    ∃gate_311, Gates.or gate_310 gate_308 gate_311 ∧
    ∃gate_312, Gates.select gate_304 (0:F) gate_311 gate_312 ∧
    Gates.is_bool Input[163] ∧
    ∃gate_314, Gates.or Input[163] gate_304 gate_314 ∧
    ∃gate_315, Gates.select gate_312 (0:F) gate_314 gate_315 ∧
    Gates.is_bool Input[162] ∧
    ∃gate_317, gate_317 = Gates.sub (1:F) Input[162] ∧
    ∃gate_318, Gates.or gate_317 gate_312 gate_318 ∧
    ∃gate_319, Gates.select gate_315 (0:F) gate_318 gate_319 ∧
    Gates.is_bool Input[161] ∧
    ∃gate_321, gate_321 = Gates.sub (1:F) Input[161] ∧
    ∃gate_322, Gates.or gate_321 gate_319 gate_322 ∧
    ∃gate_323, Gates.select gate_315 (0:F) gate_322 gate_323 ∧
    Gates.is_bool Input[160] ∧
    ∃gate_325, Gates.or Input[160] gate_315 gate_325 ∧
    ∃gate_326, Gates.select gate_323 (0:F) gate_325 gate_326 ∧
    Gates.is_bool Input[159] ∧
    ∃gate_328, gate_328 = Gates.sub (1:F) Input[159] ∧
    ∃gate_329, Gates.or gate_328 gate_323 gate_329 ∧
    ∃gate_330, Gates.select gate_326 (0:F) gate_329 gate_330 ∧
    Gates.is_bool Input[158] ∧
    ∃gate_332, Gates.or Input[158] gate_326 gate_332 ∧
    ∃gate_333, Gates.select gate_330 (0:F) gate_332 gate_333 ∧
    Gates.is_bool Input[157] ∧
    ∃gate_335, Gates.or Input[157] gate_333 gate_335 ∧
    ∃gate_336, Gates.select gate_330 (0:F) gate_335 gate_336 ∧
    Gates.is_bool Input[156] ∧
    ∃gate_338, Gates.or Input[156] gate_336 gate_338 ∧
    ∃gate_339, Gates.select gate_330 (0:F) gate_338 gate_339 ∧
    Gates.is_bool Input[155] ∧
    ∃gate_341, Gates.or Input[155] gate_339 gate_341 ∧
    ∃gate_342, Gates.select gate_330 (0:F) gate_341 gate_342 ∧
    Gates.is_bool Input[154] ∧
    ∃gate_344, Gates.or Input[154] gate_342 gate_344 ∧
    ∃gate_345, Gates.select gate_330 (0:F) gate_344 gate_345 ∧
    Gates.is_bool Input[153] ∧
    ∃gate_347, Gates.or Input[153] gate_345 gate_347 ∧
    ∃gate_348, Gates.select gate_330 (0:F) gate_347 gate_348 ∧
    Gates.is_bool Input[152] ∧
    ∃gate_350, gate_350 = Gates.sub (1:F) Input[152] ∧
    ∃gate_351, Gates.or gate_350 gate_330 gate_351 ∧
    ∃gate_352, Gates.select gate_348 (0:F) gate_351 gate_352 ∧
    Gates.is_bool Input[151] ∧
    ∃gate_354, gate_354 = Gates.sub (1:F) Input[151] ∧
    ∃gate_355, Gates.or gate_354 gate_352 gate_355 ∧
    ∃gate_356, Gates.select gate_348 (0:F) gate_355 gate_356 ∧
    Gates.is_bool Input[150] ∧
    ∃gate_358, Gates.or Input[150] gate_348 gate_358 ∧
    ∃gate_359, Gates.select gate_356 (0:F) gate_358 gate_359 ∧
    Gates.is_bool Input[149] ∧
    ∃gate_361, Gates.or Input[149] gate_359 gate_361 ∧
    ∃gate_362, Gates.select gate_356 (0:F) gate_361 gate_362 ∧
    Gates.is_bool Input[148] ∧
    ∃gate_364, Gates.or Input[148] gate_362 gate_364 ∧
    ∃gate_365, Gates.select gate_356 (0:F) gate_364 gate_365 ∧
    Gates.is_bool Input[147] ∧
    ∃gate_367, Gates.or Input[147] gate_365 gate_367 ∧
    ∃gate_368, Gates.select gate_356 (0:F) gate_367 gate_368 ∧
    Gates.is_bool Input[146] ∧
    ∃gate_370, Gates.or Input[146] gate_368 gate_370 ∧
    ∃gate_371, Gates.select gate_356 (0:F) gate_370 gate_371 ∧
    Gates.is_bool Input[145] ∧
    ∃gate_373, Gates.or Input[145] gate_371 gate_373 ∧
    ∃gate_374, Gates.select gate_356 (0:F) gate_373 gate_374 ∧
    Gates.is_bool Input[144] ∧
    ∃gate_376, gate_376 = Gates.sub (1:F) Input[144] ∧
    ∃gate_377, Gates.or gate_376 gate_356 gate_377 ∧
    ∃gate_378, Gates.select gate_374 (0:F) gate_377 gate_378 ∧
    Gates.is_bool Input[143] ∧
    ∃gate_380, Gates.or Input[143] gate_374 gate_380 ∧
    ∃gate_381, Gates.select gate_378 (0:F) gate_380 gate_381 ∧
    Gates.is_bool Input[142] ∧
    ∃gate_383, gate_383 = Gates.sub (1:F) Input[142] ∧
    ∃gate_384, Gates.or gate_383 gate_378 gate_384 ∧
    ∃gate_385, Gates.select gate_381 (0:F) gate_384 gate_385 ∧
    Gates.is_bool Input[141] ∧
    ∃gate_387, Gates.or Input[141] gate_381 gate_387 ∧
    ∃gate_388, Gates.select gate_385 (0:F) gate_387 gate_388 ∧
    Gates.is_bool Input[140] ∧
    ∃gate_390, gate_390 = Gates.sub (1:F) Input[140] ∧
    ∃gate_391, Gates.or gate_390 gate_385 gate_391 ∧
    ∃gate_392, Gates.select gate_388 (0:F) gate_391 gate_392 ∧
    Gates.is_bool Input[139] ∧
    ∃gate_394, gate_394 = Gates.sub (1:F) Input[139] ∧
    ∃gate_395, Gates.or gate_394 gate_392 gate_395 ∧
    ∃gate_396, Gates.select gate_388 (0:F) gate_395 gate_396 ∧
    Gates.is_bool Input[138] ∧
    ∃gate_398, Gates.or Input[138] gate_388 gate_398 ∧
    ∃gate_399, Gates.select gate_396 (0:F) gate_398 gate_399 ∧
    Gates.is_bool Input[137] ∧
    ∃gate_401, Gates.or Input[137] gate_399 gate_401 ∧
    ∃gate_402, Gates.select gate_396 (0:F) gate_401 gate_402 ∧
    Gates.is_bool Input[136] ∧
    ∃gate_404, Gates.or Input[136] gate_402 gate_404 ∧
    ∃gate_405, Gates.select gate_396 (0:F) gate_404 gate_405 ∧
    Gates.is_bool Input[135] ∧
    ∃gate_407, Gates.or Input[135] gate_405 gate_407 ∧
    ∃gate_408, Gates.select gate_396 (0:F) gate_407 gate_408 ∧
    Gates.is_bool Input[134] ∧
    ∃gate_410, gate_410 = Gates.sub (1:F) Input[134] ∧
    ∃gate_411, Gates.or gate_410 gate_396 gate_411 ∧
    ∃gate_412, Gates.select gate_408 (0:F) gate_411 gate_412 ∧
    Gates.is_bool Input[133] ∧
    ∃gate_414, Gates.or Input[133] gate_408 gate_414 ∧
    ∃gate_415, Gates.select gate_412 (0:F) gate_414 gate_415 ∧
    Gates.is_bool Input[132] ∧
    ∃gate_417, gate_417 = Gates.sub (1:F) Input[132] ∧
    ∃gate_418, Gates.or gate_417 gate_412 gate_418 ∧
    ∃gate_419, Gates.select gate_415 (0:F) gate_418 gate_419 ∧
    Gates.is_bool Input[131] ∧
    ∃gate_421, gate_421 = Gates.sub (1:F) Input[131] ∧
    ∃gate_422, Gates.or gate_421 gate_419 gate_422 ∧
    ∃gate_423, Gates.select gate_415 (0:F) gate_422 gate_423 ∧
    Gates.is_bool Input[130] ∧
    ∃gate_425, gate_425 = Gates.sub (1:F) Input[130] ∧
    ∃gate_426, Gates.or gate_425 gate_423 gate_426 ∧
    ∃gate_427, Gates.select gate_415 (0:F) gate_426 gate_427 ∧
    Gates.is_bool Input[129] ∧
    ∃gate_429, Gates.or Input[129] gate_415 gate_429 ∧
    ∃gate_430, Gates.select gate_427 (0:F) gate_429 gate_430 ∧
    Gates.is_bool Input[128] ∧
    ∃gate_432, gate_432 = Gates.sub (1:F) Input[128] ∧
    ∃gate_433, Gates.or gate_432 gate_427 gate_433 ∧
    ∃gate_434, Gates.select gate_430 (0:F) gate_433 gate_434 ∧
    Gates.is_bool Input[127] ∧
    ∃gate_436, Gates.or Input[127] gate_430 gate_436 ∧
    ∃gate_437, Gates.select gate_434 (0:F) gate_436 gate_437 ∧
    Gates.is_bool Input[126] ∧
    ∃gate_439, Gates.or Input[126] gate_437 gate_439 ∧
    ∃gate_440, Gates.select gate_434 (0:F) gate_439 gate_440 ∧
    Gates.is_bool Input[125] ∧
    ∃gate_442, gate_442 = Gates.sub (1:F) Input[125] ∧
    ∃gate_443, Gates.or gate_442 gate_434 gate_443 ∧
    ∃gate_444, Gates.select gate_440 (0:F) gate_443 gate_444 ∧
    Gates.is_bool Input[124] ∧
    ∃gate_446, Gates.or Input[124] gate_440 gate_446 ∧
    ∃gate_447, Gates.select gate_444 (0:F) gate_446 gate_447 ∧
    Gates.is_bool Input[123] ∧
    ∃gate_449, gate_449 = Gates.sub (1:F) Input[123] ∧
    ∃gate_450, Gates.or gate_449 gate_444 gate_450 ∧
    ∃gate_451, Gates.select gate_447 (0:F) gate_450 gate_451 ∧
    Gates.is_bool Input[122] ∧
    ∃gate_453, Gates.or Input[122] gate_447 gate_453 ∧
    ∃gate_454, Gates.select gate_451 (0:F) gate_453 gate_454 ∧
    Gates.is_bool Input[121] ∧
    ∃gate_456, Gates.or Input[121] gate_454 gate_456 ∧
    ∃gate_457, Gates.select gate_451 (0:F) gate_456 gate_457 ∧
    Gates.is_bool Input[120] ∧
    ∃gate_459, Gates.or Input[120] gate_457 gate_459 ∧
    ∃gate_460, Gates.select gate_451 (0:F) gate_459 gate_460 ∧
    Gates.is_bool Input[119] ∧
    ∃gate_462, Gates.or Input[119] gate_460 gate_462 ∧
    ∃gate_463, Gates.select gate_451 (0:F) gate_462 gate_463 ∧
    Gates.is_bool Input[118] ∧
    ∃gate_465, Gates.or Input[118] gate_463 gate_465 ∧
    ∃gate_466, Gates.select gate_451 (0:F) gate_465 gate_466 ∧
    Gates.is_bool Input[117] ∧
    ∃gate_468, gate_468 = Gates.sub (1:F) Input[117] ∧
    ∃gate_469, Gates.or gate_468 gate_451 gate_469 ∧
    ∃gate_470, Gates.select gate_466 (0:F) gate_469 gate_470 ∧
    Gates.is_bool Input[116] ∧
    ∃gate_472, gate_472 = Gates.sub (1:F) Input[116] ∧
    ∃gate_473, Gates.or gate_472 gate_470 gate_473 ∧
    ∃gate_474, Gates.select gate_466 (0:F) gate_473 gate_474 ∧
    Gates.is_bool Input[115] ∧
    ∃gate_476, Gates.or Input[115] gate_466 gate_476 ∧
    ∃gate_477, Gates.select gate_474 (0:F) gate_476 gate_477 ∧
    Gates.is_bool Input[114] ∧
    ∃gate_479, Gates.or Input[114] gate_477 gate_479 ∧
    ∃gate_480, Gates.select gate_474 (0:F) gate_479 gate_480 ∧
    Gates.is_bool Input[113] ∧
    ∃gate_482, gate_482 = Gates.sub (1:F) Input[113] ∧
    ∃gate_483, Gates.or gate_482 gate_474 gate_483 ∧
    ∃gate_484, Gates.select gate_480 (0:F) gate_483 gate_484 ∧
    Gates.is_bool Input[112] ∧
    ∃gate_486, gate_486 = Gates.sub (1:F) Input[112] ∧
    ∃gate_487, Gates.or gate_486 gate_484 gate_487 ∧
    ∃gate_488, Gates.select gate_480 (0:F) gate_487 gate_488 ∧
    Gates.is_bool Input[111] ∧
    ∃gate_490, gate_490 = Gates.sub (1:F) Input[111] ∧
    ∃gate_491, Gates.or gate_490 gate_488 gate_491 ∧
    ∃gate_492, Gates.select gate_480 (0:F) gate_491 gate_492 ∧
    Gates.is_bool Input[110] ∧
    ∃gate_494, gate_494 = Gates.sub (1:F) Input[110] ∧
    ∃gate_495, Gates.or gate_494 gate_492 gate_495 ∧
    ∃gate_496, Gates.select gate_480 (0:F) gate_495 gate_496 ∧
    Gates.is_bool Input[109] ∧
    ∃gate_498, gate_498 = Gates.sub (1:F) Input[109] ∧
    ∃gate_499, Gates.or gate_498 gate_496 gate_499 ∧
    ∃gate_500, Gates.select gate_480 (0:F) gate_499 gate_500 ∧
    Gates.is_bool Input[108] ∧
    ∃gate_502, Gates.or Input[108] gate_480 gate_502 ∧
    ∃gate_503, Gates.select gate_500 (0:F) gate_502 gate_503 ∧
    Gates.is_bool Input[107] ∧
    ∃gate_505, gate_505 = Gates.sub (1:F) Input[107] ∧
    ∃gate_506, Gates.or gate_505 gate_500 gate_506 ∧
    ∃gate_507, Gates.select gate_503 (0:F) gate_506 gate_507 ∧
    Gates.is_bool Input[106] ∧
    ∃gate_509, Gates.or Input[106] gate_503 gate_509 ∧
    ∃gate_510, Gates.select gate_507 (0:F) gate_509 gate_510 ∧
    Gates.is_bool Input[105] ∧
    ∃gate_512, Gates.or Input[105] gate_510 gate_512 ∧
    ∃gate_513, Gates.select gate_507 (0:F) gate_512 gate_513 ∧
    Gates.is_bool Input[104] ∧
    ∃gate_515, Gates.or Input[104] gate_513 gate_515 ∧
    ∃gate_516, Gates.select gate_507 (0:F) gate_515 gate_516 ∧
    Gates.is_bool Input[103] ∧
    ∃gate_518, Gates.or Input[103] gate_516 gate_518 ∧
    ∃gate_519, Gates.select gate_507 (0:F) gate_518 gate_519 ∧
    Gates.is_bool Input[102] ∧
    ∃gate_521, gate_521 = Gates.sub (1:F) Input[102] ∧
    ∃gate_522, Gates.or gate_521 gate_507 gate_522 ∧
    ∃gate_523, Gates.select gate_519 (0:F) gate_522 gate_523 ∧
    Gates.is_bool Input[101] ∧
    ∃gate_525, Gates.or Input[101] gate_519 gate_525 ∧
    ∃gate_526, Gates.select gate_523 (0:F) gate_525 gate_526 ∧
    Gates.is_bool Input[100] ∧
    ∃gate_528, Gates.or Input[100] gate_526 gate_528 ∧
    ∃gate_529, Gates.select gate_523 (0:F) gate_528 gate_529 ∧
    Gates.is_bool Input[99] ∧
    ∃gate_531, gate_531 = Gates.sub (1:F) Input[99] ∧
    ∃gate_532, Gates.or gate_531 gate_523 gate_532 ∧
    ∃gate_533, Gates.select gate_529 (0:F) gate_532 gate_533 ∧
    Gates.is_bool Input[98] ∧
    ∃gate_535, Gates.or Input[98] gate_529 gate_535 ∧
    ∃gate_536, Gates.select gate_533 (0:F) gate_535 gate_536 ∧
    Gates.is_bool Input[97] ∧
    ∃gate_538, Gates.or Input[97] gate_536 gate_538 ∧
    ∃gate_539, Gates.select gate_533 (0:F) gate_538 gate_539 ∧
    Gates.is_bool Input[96] ∧
    ∃gate_541, Gates.or Input[96] gate_539 gate_541 ∧
    ∃gate_542, Gates.select gate_533 (0:F) gate_541 gate_542 ∧
    Gates.is_bool Input[95] ∧
    ∃gate_544, Gates.or Input[95] gate_542 gate_544 ∧
    ∃gate_545, Gates.select gate_533 (0:F) gate_544 gate_545 ∧
    Gates.is_bool Input[94] ∧
    ∃gate_547, gate_547 = Gates.sub (1:F) Input[94] ∧
    ∃gate_548, Gates.or gate_547 gate_533 gate_548 ∧
    ∃gate_549, Gates.select gate_545 (0:F) gate_548 gate_549 ∧
    Gates.is_bool Input[93] ∧
    ∃gate_551, gate_551 = Gates.sub (1:F) Input[93] ∧
    ∃gate_552, Gates.or gate_551 gate_549 gate_552 ∧
    ∃gate_553, Gates.select gate_545 (0:F) gate_552 gate_553 ∧
    Gates.is_bool Input[92] ∧
    ∃gate_555, gate_555 = Gates.sub (1:F) Input[92] ∧
    ∃gate_556, Gates.or gate_555 gate_553 gate_556 ∧
    ∃gate_557, Gates.select gate_545 (0:F) gate_556 gate_557 ∧
    Gates.is_bool Input[91] ∧
    ∃gate_559, gate_559 = Gates.sub (1:F) Input[91] ∧
    ∃gate_560, Gates.or gate_559 gate_557 gate_560 ∧
    ∃gate_561, Gates.select gate_545 (0:F) gate_560 gate_561 ∧
    Gates.is_bool Input[90] ∧
    ∃gate_563, Gates.or Input[90] gate_545 gate_563 ∧
    ∃gate_564, Gates.select gate_561 (0:F) gate_563 gate_564 ∧
    Gates.is_bool Input[89] ∧
    ∃gate_566, Gates.or Input[89] gate_564 gate_566 ∧
    ∃gate_567, Gates.select gate_561 (0:F) gate_566 gate_567 ∧
    Gates.is_bool Input[88] ∧
    ∃gate_569, gate_569 = Gates.sub (1:F) Input[88] ∧
    ∃gate_570, Gates.or gate_569 gate_561 gate_570 ∧
    ∃gate_571, Gates.select gate_567 (0:F) gate_570 gate_571 ∧
    Gates.is_bool Input[87] ∧
    ∃gate_573, gate_573 = Gates.sub (1:F) Input[87] ∧
    ∃gate_574, Gates.or gate_573 gate_571 gate_574 ∧
    ∃gate_575, Gates.select gate_567 (0:F) gate_574 gate_575 ∧
    Gates.is_bool Input[86] ∧
    ∃gate_577, Gates.or Input[86] gate_567 gate_577 ∧
    ∃gate_578, Gates.select gate_575 (0:F) gate_577 gate_578 ∧
    Gates.is_bool Input[85] ∧
    ∃gate_580, gate_580 = Gates.sub (1:F) Input[85] ∧
    ∃gate_581, Gates.or gate_580 gate_575 gate_581 ∧
    ∃gate_582, Gates.select gate_578 (0:F) gate_581 gate_582 ∧
    Gates.is_bool Input[84] ∧
    ∃gate_584, gate_584 = Gates.sub (1:F) Input[84] ∧
    ∃gate_585, Gates.or gate_584 gate_582 gate_585 ∧
    ∃gate_586, Gates.select gate_578 (0:F) gate_585 gate_586 ∧
    Gates.is_bool Input[83] ∧
    ∃gate_588, gate_588 = Gates.sub (1:F) Input[83] ∧
    ∃gate_589, Gates.or gate_588 gate_586 gate_589 ∧
    ∃gate_590, Gates.select gate_578 (0:F) gate_589 gate_590 ∧
    Gates.is_bool Input[82] ∧
    ∃gate_592, Gates.or Input[82] gate_578 gate_592 ∧
    ∃gate_593, Gates.select gate_590 (0:F) gate_592 gate_593 ∧
    Gates.is_bool Input[81] ∧
    ∃gate_595, Gates.or Input[81] gate_593 gate_595 ∧
    ∃gate_596, Gates.select gate_590 (0:F) gate_595 gate_596 ∧
    Gates.is_bool Input[80] ∧
    ∃gate_598, gate_598 = Gates.sub (1:F) Input[80] ∧
    ∃gate_599, Gates.or gate_598 gate_590 gate_599 ∧
    ∃gate_600, Gates.select gate_596 (0:F) gate_599 gate_600 ∧
    Gates.is_bool Input[79] ∧
    ∃gate_602, Gates.or Input[79] gate_596 gate_602 ∧
    ∃gate_603, Gates.select gate_600 (0:F) gate_602 gate_603 ∧
    Gates.is_bool Input[78] ∧
    ∃gate_605, gate_605 = Gates.sub (1:F) Input[78] ∧
    ∃gate_606, Gates.or gate_605 gate_600 gate_606 ∧
    ∃gate_607, Gates.select gate_603 (0:F) gate_606 gate_607 ∧
    Gates.is_bool Input[77] ∧
    ∃gate_609, gate_609 = Gates.sub (1:F) Input[77] ∧
    ∃gate_610, Gates.or gate_609 gate_607 gate_610 ∧
    ∃gate_611, Gates.select gate_603 (0:F) gate_610 gate_611 ∧
    Gates.is_bool Input[76] ∧
    ∃gate_613, gate_613 = Gates.sub (1:F) Input[76] ∧
    ∃gate_614, Gates.or gate_613 gate_611 gate_614 ∧
    ∃gate_615, Gates.select gate_603 (0:F) gate_614 gate_615 ∧
    Gates.is_bool Input[75] ∧
    ∃gate_617, Gates.or Input[75] gate_603 gate_617 ∧
    ∃gate_618, Gates.select gate_615 (0:F) gate_617 gate_618 ∧
    Gates.is_bool Input[74] ∧
    ∃gate_620, Gates.or Input[74] gate_618 gate_620 ∧
    ∃gate_621, Gates.select gate_615 (0:F) gate_620 gate_621 ∧
    Gates.is_bool Input[73] ∧
    ∃gate_623, Gates.or Input[73] gate_621 gate_623 ∧
    ∃gate_624, Gates.select gate_615 (0:F) gate_623 gate_624 ∧
    Gates.is_bool Input[72] ∧
    ∃gate_626, Gates.or Input[72] gate_624 gate_626 ∧
    ∃gate_627, Gates.select gate_615 (0:F) gate_626 gate_627 ∧
    Gates.is_bool Input[71] ∧
    ∃gate_629, gate_629 = Gates.sub (1:F) Input[71] ∧
    ∃gate_630, Gates.or gate_629 gate_615 gate_630 ∧
    ∃gate_631, Gates.select gate_627 (0:F) gate_630 gate_631 ∧
    Gates.is_bool Input[70] ∧
    ∃gate_633, Gates.or Input[70] gate_627 gate_633 ∧
    ∃gate_634, Gates.select gate_631 (0:F) gate_633 gate_634 ∧
    Gates.is_bool Input[69] ∧
    ∃gate_636, Gates.or Input[69] gate_634 gate_636 ∧
    ∃gate_637, Gates.select gate_631 (0:F) gate_636 gate_637 ∧
    Gates.is_bool Input[68] ∧
    ∃gate_639, gate_639 = Gates.sub (1:F) Input[68] ∧
    ∃gate_640, Gates.or gate_639 gate_631 gate_640 ∧
    ∃gate_641, Gates.select gate_637 (0:F) gate_640 gate_641 ∧
    Gates.is_bool Input[67] ∧
    ∃gate_643, Gates.or Input[67] gate_637 gate_643 ∧
    ∃gate_644, Gates.select gate_641 (0:F) gate_643 gate_644 ∧
    Gates.is_bool Input[66] ∧
    ∃gate_646, Gates.or Input[66] gate_644 gate_646 ∧
    ∃gate_647, Gates.select gate_641 (0:F) gate_646 gate_647 ∧
    Gates.is_bool Input[65] ∧
    ∃gate_649, Gates.or Input[65] gate_647 gate_649 ∧
    ∃gate_650, Gates.select gate_641 (0:F) gate_649 gate_650 ∧
    Gates.is_bool Input[64] ∧
    ∃gate_652, gate_652 = Gates.sub (1:F) Input[64] ∧
    ∃gate_653, Gates.or gate_652 gate_641 gate_653 ∧
    ∃gate_654, Gates.select gate_650 (0:F) gate_653 gate_654 ∧
    Gates.is_bool Input[63] ∧
    ∃gate_656, Gates.or Input[63] gate_650 gate_656 ∧
    ∃gate_657, Gates.select gate_654 (0:F) gate_656 gate_657 ∧
    Gates.is_bool Input[62] ∧
    ∃gate_659, gate_659 = Gates.sub (1:F) Input[62] ∧
    ∃gate_660, Gates.or gate_659 gate_654 gate_660 ∧
    ∃gate_661, Gates.select gate_657 (0:F) gate_660 gate_661 ∧
    Gates.is_bool Input[61] ∧
    ∃gate_663, Gates.or Input[61] gate_657 gate_663 ∧
    ∃gate_664, Gates.select gate_661 (0:F) gate_663 gate_664 ∧
    Gates.is_bool Input[60] ∧
    ∃gate_666, Gates.or Input[60] gate_664 gate_666 ∧
    ∃gate_667, Gates.select gate_661 (0:F) gate_666 gate_667 ∧
    Gates.is_bool Input[59] ∧
    ∃gate_669, Gates.or Input[59] gate_667 gate_669 ∧
    ∃gate_670, Gates.select gate_661 (0:F) gate_669 gate_670 ∧
    Gates.is_bool Input[58] ∧
    ∃gate_672, Gates.or Input[58] gate_670 gate_672 ∧
    ∃gate_673, Gates.select gate_661 (0:F) gate_672 gate_673 ∧
    Gates.is_bool Input[57] ∧
    ∃gate_675, gate_675 = Gates.sub (1:F) Input[57] ∧
    ∃gate_676, Gates.or gate_675 gate_661 gate_676 ∧
    ∃gate_677, Gates.select gate_673 (0:F) gate_676 gate_677 ∧
    Gates.is_bool Input[56] ∧
    ∃gate_679, gate_679 = Gates.sub (1:F) Input[56] ∧
    ∃gate_680, Gates.or gate_679 gate_677 gate_680 ∧
    ∃gate_681, Gates.select gate_673 (0:F) gate_680 gate_681 ∧
    Gates.is_bool Input[55] ∧
    ∃gate_683, gate_683 = Gates.sub (1:F) Input[55] ∧
    ∃gate_684, Gates.or gate_683 gate_681 gate_684 ∧
    ∃gate_685, Gates.select gate_673 (0:F) gate_684 gate_685 ∧
    Gates.is_bool Input[54] ∧
    ∃gate_687, gate_687 = Gates.sub (1:F) Input[54] ∧
    ∃gate_688, Gates.or gate_687 gate_685 gate_688 ∧
    ∃gate_689, Gates.select gate_673 (0:F) gate_688 gate_689 ∧
    Gates.is_bool Input[53] ∧
    ∃gate_691, gate_691 = Gates.sub (1:F) Input[53] ∧
    ∃gate_692, Gates.or gate_691 gate_689 gate_692 ∧
    ∃gate_693, Gates.select gate_673 (0:F) gate_692 gate_693 ∧
    Gates.is_bool Input[52] ∧
    ∃gate_695, Gates.or Input[52] gate_673 gate_695 ∧
    ∃gate_696, Gates.select gate_693 (0:F) gate_695 gate_696 ∧
    Gates.is_bool Input[51] ∧
    ∃gate_698, Gates.or Input[51] gate_696 gate_698 ∧
    ∃gate_699, Gates.select gate_693 (0:F) gate_698 gate_699 ∧
    Gates.is_bool Input[50] ∧
    ∃gate_701, Gates.or Input[50] gate_699 gate_701 ∧
    ∃gate_702, Gates.select gate_693 (0:F) gate_701 gate_702 ∧
    Gates.is_bool Input[49] ∧
    ∃gate_704, Gates.or Input[49] gate_702 gate_704 ∧
    ∃gate_705, Gates.select gate_693 (0:F) gate_704 gate_705 ∧
    Gates.is_bool Input[48] ∧
    ∃gate_707, gate_707 = Gates.sub (1:F) Input[48] ∧
    ∃gate_708, Gates.or gate_707 gate_693 gate_708 ∧
    ∃gate_709, Gates.select gate_705 (0:F) gate_708 gate_709 ∧
    Gates.is_bool Input[47] ∧
    ∃gate_711, gate_711 = Gates.sub (1:F) Input[47] ∧
    ∃gate_712, Gates.or gate_711 gate_709 gate_712 ∧
    ∃gate_713, Gates.select gate_705 (0:F) gate_712 gate_713 ∧
    Gates.is_bool Input[46] ∧
    ∃gate_715, gate_715 = Gates.sub (1:F) Input[46] ∧
    ∃gate_716, Gates.or gate_715 gate_713 gate_716 ∧
    ∃gate_717, Gates.select gate_705 (0:F) gate_716 gate_717 ∧
    Gates.is_bool Input[45] ∧
    ∃gate_719, gate_719 = Gates.sub (1:F) Input[45] ∧
    ∃gate_720, Gates.or gate_719 gate_717 gate_720 ∧
    ∃gate_721, Gates.select gate_705 (0:F) gate_720 gate_721 ∧
    Gates.is_bool Input[44] ∧
    ∃gate_723, gate_723 = Gates.sub (1:F) Input[44] ∧
    ∃gate_724, Gates.or gate_723 gate_721 gate_724 ∧
    ∃gate_725, Gates.select gate_705 (0:F) gate_724 gate_725 ∧
    Gates.is_bool Input[43] ∧
    ∃gate_727, Gates.or Input[43] gate_705 gate_727 ∧
    ∃gate_728, Gates.select gate_725 (0:F) gate_727 gate_728 ∧
    Gates.is_bool Input[42] ∧
    ∃gate_730, gate_730 = Gates.sub (1:F) Input[42] ∧
    ∃gate_731, Gates.or gate_730 gate_725 gate_731 ∧
    ∃gate_732, Gates.select gate_728 (0:F) gate_731 gate_732 ∧
    Gates.is_bool Input[41] ∧
    ∃gate_734, Gates.or Input[41] gate_728 gate_734 ∧
    ∃gate_735, Gates.select gate_732 (0:F) gate_734 gate_735 ∧
    Gates.is_bool Input[40] ∧
    ∃gate_737, gate_737 = Gates.sub (1:F) Input[40] ∧
    ∃gate_738, Gates.or gate_737 gate_732 gate_738 ∧
    ∃gate_739, Gates.select gate_735 (0:F) gate_738 gate_739 ∧
    Gates.is_bool Input[39] ∧
    ∃gate_741, gate_741 = Gates.sub (1:F) Input[39] ∧
    ∃gate_742, Gates.or gate_741 gate_739 gate_742 ∧
    ∃gate_743, Gates.select gate_735 (0:F) gate_742 gate_743 ∧
    Gates.is_bool Input[38] ∧
    ∃gate_745, Gates.or Input[38] gate_735 gate_745 ∧
    ∃gate_746, Gates.select gate_743 (0:F) gate_745 gate_746 ∧
    Gates.is_bool Input[37] ∧
    ∃gate_748, Gates.or Input[37] gate_746 gate_748 ∧
    ∃gate_749, Gates.select gate_743 (0:F) gate_748 gate_749 ∧
    Gates.is_bool Input[36] ∧
    ∃gate_751, gate_751 = Gates.sub (1:F) Input[36] ∧
    ∃gate_752, Gates.or gate_751 gate_743 gate_752 ∧
    ∃gate_753, Gates.select gate_749 (0:F) gate_752 gate_753 ∧
    Gates.is_bool Input[35] ∧
    ∃gate_755, Gates.or Input[35] gate_749 gate_755 ∧
    ∃gate_756, Gates.select gate_753 (0:F) gate_755 gate_756 ∧
    Gates.is_bool Input[34] ∧
    ∃gate_758, Gates.or Input[34] gate_756 gate_758 ∧
    ∃gate_759, Gates.select gate_753 (0:F) gate_758 gate_759 ∧
    Gates.is_bool Input[33] ∧
    ∃gate_761, gate_761 = Gates.sub (1:F) Input[33] ∧
    ∃gate_762, Gates.or gate_761 gate_753 gate_762 ∧
    ∃gate_763, Gates.select gate_759 (0:F) gate_762 gate_763 ∧
    Gates.is_bool Input[32] ∧
    ∃gate_765, gate_765 = Gates.sub (1:F) Input[32] ∧
    ∃gate_766, Gates.or gate_765 gate_763 gate_766 ∧
    ∃gate_767, Gates.select gate_759 (0:F) gate_766 gate_767 ∧
    Gates.is_bool Input[31] ∧
    ∃gate_769, gate_769 = Gates.sub (1:F) Input[31] ∧
    ∃gate_770, Gates.or gate_769 gate_767 gate_770 ∧
    ∃gate_771, Gates.select gate_759 (0:F) gate_770 gate_771 ∧
    Gates.is_bool Input[30] ∧
    ∃gate_773, gate_773 = Gates.sub (1:F) Input[30] ∧
    ∃gate_774, Gates.or gate_773 gate_771 gate_774 ∧
    ∃gate_775, Gates.select gate_759 (0:F) gate_774 gate_775 ∧
    Gates.is_bool Input[29] ∧
    ∃gate_777, gate_777 = Gates.sub (1:F) Input[29] ∧
    ∃gate_778, Gates.or gate_777 gate_775 gate_778 ∧
    ∃gate_779, Gates.select gate_759 (0:F) gate_778 gate_779 ∧
    Gates.is_bool Input[28] ∧
    ∃gate_781, gate_781 = Gates.sub (1:F) Input[28] ∧
    ∃gate_782, Gates.or gate_781 gate_779 gate_782 ∧
    ∃gate_783, Gates.select gate_759 (0:F) gate_782 gate_783 ∧
    Gates.is_bool Input[27] ∧
    ∃gate_785, Gates.or Input[27] gate_759 gate_785 ∧
    ∃gate_786, Gates.select gate_783 (0:F) gate_785 gate_786 ∧
    Gates.is_bool Input[26] ∧
    ∃gate_788, Gates.or Input[26] gate_786 gate_788 ∧
    ∃gate_789, Gates.select gate_783 (0:F) gate_788 gate_789 ∧
    Gates.is_bool Input[25] ∧
    ∃gate_791, Gates.or Input[25] gate_789 gate_791 ∧
    ∃gate_792, Gates.select gate_783 (0:F) gate_791 gate_792 ∧
    Gates.is_bool Input[24] ∧
    ∃gate_794, Gates.or Input[24] gate_792 gate_794 ∧
    ∃gate_795, Gates.select gate_783 (0:F) gate_794 gate_795 ∧
    Gates.is_bool Input[23] ∧
    ∃gate_797, Gates.or Input[23] gate_795 gate_797 ∧
    ∃gate_798, Gates.select gate_783 (0:F) gate_797 gate_798 ∧
    Gates.is_bool Input[22] ∧
    ∃gate_800, Gates.or Input[22] gate_798 gate_800 ∧
    ∃gate_801, Gates.select gate_783 (0:F) gate_800 gate_801 ∧
    Gates.is_bool Input[21] ∧
    ∃gate_803, Gates.or Input[21] gate_801 gate_803 ∧
    ∃gate_804, Gates.select gate_783 (0:F) gate_803 gate_804 ∧
    Gates.is_bool Input[20] ∧
    ∃gate_806, Gates.or Input[20] gate_804 gate_806 ∧
    ∃gate_807, Gates.select gate_783 (0:F) gate_806 gate_807 ∧
    Gates.is_bool Input[19] ∧
    ∃gate_809, Gates.or Input[19] gate_807 gate_809 ∧
    ∃gate_810, Gates.select gate_783 (0:F) gate_809 gate_810 ∧
    Gates.is_bool Input[18] ∧
    ∃gate_812, Gates.or Input[18] gate_810 gate_812 ∧
    ∃gate_813, Gates.select gate_783 (0:F) gate_812 gate_813 ∧
    Gates.is_bool Input[17] ∧
    ∃gate_815, Gates.or Input[17] gate_813 gate_815 ∧
    ∃gate_816, Gates.select gate_783 (0:F) gate_815 gate_816 ∧
    Gates.is_bool Input[16] ∧
    ∃gate_818, Gates.or Input[16] gate_816 gate_818 ∧
    ∃gate_819, Gates.select gate_783 (0:F) gate_818 gate_819 ∧
    Gates.is_bool Input[15] ∧
    ∃gate_821, Gates.or Input[15] gate_819 gate_821 ∧
    ∃gate_822, Gates.select gate_783 (0:F) gate_821 gate_822 ∧
    Gates.is_bool Input[14] ∧
    ∃gate_824, Gates.or Input[14] gate_822 gate_824 ∧
    ∃gate_825, Gates.select gate_783 (0:F) gate_824 gate_825 ∧
    Gates.is_bool Input[13] ∧
    ∃gate_827, Gates.or Input[13] gate_825 gate_827 ∧
    ∃gate_828, Gates.select gate_783 (0:F) gate_827 gate_828 ∧
    Gates.is_bool Input[12] ∧
    ∃gate_830, Gates.or Input[12] gate_828 gate_830 ∧
    ∃gate_831, Gates.select gate_783 (0:F) gate_830 gate_831 ∧
    Gates.is_bool Input[11] ∧
    ∃gate_833, Gates.or Input[11] gate_831 gate_833 ∧
    ∃gate_834, Gates.select gate_783 (0:F) gate_833 gate_834 ∧
    Gates.is_bool Input[10] ∧
    ∃gate_836, Gates.or Input[10] gate_834 gate_836 ∧
    ∃gate_837, Gates.select gate_783 (0:F) gate_836 gate_837 ∧
    Gates.is_bool Input[9] ∧
    ∃gate_839, Gates.or Input[9] gate_837 gate_839 ∧
    ∃gate_840, Gates.select gate_783 (0:F) gate_839 gate_840 ∧
    Gates.is_bool Input[8] ∧
    ∃gate_842, Gates.or Input[8] gate_840 gate_842 ∧
    ∃gate_843, Gates.select gate_783 (0:F) gate_842 gate_843 ∧
    Gates.is_bool Input[7] ∧
    ∃gate_845, Gates.or Input[7] gate_843 gate_845 ∧
    ∃gate_846, Gates.select gate_783 (0:F) gate_845 gate_846 ∧
    Gates.is_bool Input[6] ∧
    ∃gate_848, Gates.or Input[6] gate_846 gate_848 ∧
    ∃gate_849, Gates.select gate_783 (0:F) gate_848 gate_849 ∧
    Gates.is_bool Input[5] ∧
    ∃gate_851, Gates.or Input[5] gate_849 gate_851 ∧
    ∃gate_852, Gates.select gate_783 (0:F) gate_851 gate_852 ∧
    Gates.is_bool Input[4] ∧
    ∃gate_854, Gates.or Input[4] gate_852 gate_854 ∧
    ∃gate_855, Gates.select gate_783 (0:F) gate_854 gate_855 ∧
    Gates.is_bool Input[3] ∧
    ∃gate_857, Gates.or Input[3] gate_855 gate_857 ∧
    ∃gate_858, Gates.select gate_783 (0:F) gate_857 gate_858 ∧
    Gates.is_bool Input[2] ∧
    ∃gate_860, Gates.or Input[2] gate_858 gate_860 ∧
    ∃gate_861, Gates.select gate_783 (0:F) gate_860 gate_861 ∧
    Gates.is_bool Input[1] ∧
    ∃gate_863, Gates.or Input[1] gate_861 gate_863 ∧
    ∃gate_864, Gates.select gate_783 (0:F) gate_863 gate_864 ∧
    Gates.is_bool Input[0] ∧
    ∃gate_866, gate_866 = Gates.sub (1:F) Input[0] ∧
    ∃gate_867, Gates.or gate_866 gate_783 gate_867 ∧
    ∃gate_868, Gates.select gate_864 (0:F) gate_867 gate_868 ∧
    Gates.eq gate_868 (1:F) ∧
    True

def ToReducedBigEndianGadget_256 (Variable: F) (k: Vector F 256 -> Prop): Prop :=
    ∃gate_0, Gates.to_binary Variable 256 gate_0 ∧
    ReducedModRCheck_256 vec![gate_0[0], gate_0[1], gate_0[2], gate_0[3], gate_0[4], gate_0[5], gate_0[6], gate_0[7], gate_0[8], gate_0[9], gate_0[10], gate_0[11], gate_0[12], gate_0[13], gate_0[14], gate_0[15], gate_0[16], gate_0[17], gate_0[18], gate_0[19], gate_0[20], gate_0[21], gate_0[22], gate_0[23], gate_0[24], gate_0[25], gate_0[26], gate_0[27], gate_0[28], gate_0[29], gate_0[30], gate_0[31], gate_0[32], gate_0[33], gate_0[34], gate_0[35], gate_0[36], gate_0[37], gate_0[38], gate_0[39], gate_0[40], gate_0[41], gate_0[42], gate_0[43], gate_0[44], gate_0[45], gate_0[46], gate_0[47], gate_0[48], gate_0[49], gate_0[50], gate_0[51], gate_0[52], gate_0[53], gate_0[54], gate_0[55], gate_0[56], gate_0[57], gate_0[58], gate_0[59], gate_0[60], gate_0[61], gate_0[62], gate_0[63], gate_0[64], gate_0[65], gate_0[66], gate_0[67], gate_0[68], gate_0[69], gate_0[70], gate_0[71], gate_0[72], gate_0[73], gate_0[74], gate_0[75], gate_0[76], gate_0[77], gate_0[78], gate_0[79], gate_0[80], gate_0[81], gate_0[82], gate_0[83], gate_0[84], gate_0[85], gate_0[86], gate_0[87], gate_0[88], gate_0[89], gate_0[90], gate_0[91], gate_0[92], gate_0[93], gate_0[94], gate_0[95], gate_0[96], gate_0[97], gate_0[98], gate_0[99], gate_0[100], gate_0[101], gate_0[102], gate_0[103], gate_0[104], gate_0[105], gate_0[106], gate_0[107], gate_0[108], gate_0[109], gate_0[110], gate_0[111], gate_0[112], gate_0[113], gate_0[114], gate_0[115], gate_0[116], gate_0[117], gate_0[118], gate_0[119], gate_0[120], gate_0[121], gate_0[122], gate_0[123], gate_0[124], gate_0[125], gate_0[126], gate_0[127], gate_0[128], gate_0[129], gate_0[130], gate_0[131], gate_0[132], gate_0[133], gate_0[134], gate_0[135], gate_0[136], gate_0[137], gate_0[138], gate_0[139], gate_0[140], gate_0[141], gate_0[142], gate_0[143], gate_0[144], gate_0[145], gate_0[146], gate_0[147], gate_0[148], gate_0[149], gate_0[150], gate_0[151], gate_0[152], gate_0[153], gate_0[154], gate_0[155], gate_0[156], gate_0[157], gate_0[158], gate_0[159], gate_0[160], gate_0[161], gate_0[162], gate_0[163], gate_0[164], gate_0[165], gate_0[166], gate_0[167], gate_0[168], gate_0[169], gate_0[170], gate_0[171], gate_0[172], gate_0[173], gate_0[174], gate_0[175], gate_0[176], gate_0[177], gate_0[178], gate_0[179], gate_0[180], gate_0[181], gate_0[182], gate_0[183], gate_0[184], gate_0[185], gate_0[186], gate_0[187], gate_0[188], gate_0[189], gate_0[190], gate_0[191], gate_0[192], gate_0[193], gate_0[194], gate_0[195], gate_0[196], gate_0[197], gate_0[198], gate_0[199], gate_0[200], gate_0[201], gate_0[202], gate_0[203], gate_0[204], gate_0[205], gate_0[206], gate_0[207], gate_0[208], gate_0[209], gate_0[210], gate_0[211], gate_0[212], gate_0[213], gate_0[214], gate_0[215], gate_0[216], gate_0[217], gate_0[218], gate_0[219], gate_0[220], gate_0[221], gate_0[222], gate_0[223], gate_0[224], gate_0[225], gate_0[226], gate_0[227], gate_0[228], gate_0[229], gate_0[230], gate_0[231], gate_0[232], gate_0[233], gate_0[234], gate_0[235], gate_0[236], gate_0[237], gate_0[238], gate_0[239], gate_0[240], gate_0[241], gate_0[242], gate_0[243], gate_0[244], gate_0[245], gate_0[246], gate_0[247], gate_0[248], gate_0[249], gate_0[250], gate_0[251], gate_0[252], gate_0[253], gate_0[254], gate_0[255]] ∧
    k vec![gate_0[0], gate_0[1], gate_0[2], gate_0[3], gate_0[4], gate_0[5], gate_0[6], gate_0[7], gate_0[8], gate_0[9], gate_0[10], gate_0[11], gate_0[12], gate_0[13], gate_0[14], gate_0[15], gate_0[16], gate_0[17], gate_0[18], gate_0[19], gate_0[20], gate_0[21], gate_0[22], gate_0[23], gate_0[24], gate_0[25], gate_0[26], gate_0[27], gate_0[28], gate_0[29], gate_0[30], gate_0[31], gate_0[32], gate_0[33], gate_0[34], gate_0[35], gate_0[36], gate_0[37], gate_0[38], gate_0[39], gate_0[40], gate_0[41], gate_0[42], gate_0[43], gate_0[44], gate_0[45], gate_0[46], gate_0[47], gate_0[48], gate_0[49], gate_0[50], gate_0[51], gate_0[52], gate_0[53], gate_0[54], gate_0[55], gate_0[56], gate_0[57], gate_0[58], gate_0[59], gate_0[60], gate_0[61], gate_0[62], gate_0[63], gate_0[64], gate_0[65], gate_0[66], gate_0[67], gate_0[68], gate_0[69], gate_0[70], gate_0[71], gate_0[72], gate_0[73], gate_0[74], gate_0[75], gate_0[76], gate_0[77], gate_0[78], gate_0[79], gate_0[80], gate_0[81], gate_0[82], gate_0[83], gate_0[84], gate_0[85], gate_0[86], gate_0[87], gate_0[88], gate_0[89], gate_0[90], gate_0[91], gate_0[92], gate_0[93], gate_0[94], gate_0[95], gate_0[96], gate_0[97], gate_0[98], gate_0[99], gate_0[100], gate_0[101], gate_0[102], gate_0[103], gate_0[104], gate_0[105], gate_0[106], gate_0[107], gate_0[108], gate_0[109], gate_0[110], gate_0[111], gate_0[112], gate_0[113], gate_0[114], gate_0[115], gate_0[116], gate_0[117], gate_0[118], gate_0[119], gate_0[120], gate_0[121], gate_0[122], gate_0[123], gate_0[124], gate_0[125], gate_0[126], gate_0[127], gate_0[128], gate_0[129], gate_0[130], gate_0[131], gate_0[132], gate_0[133], gate_0[134], gate_0[135], gate_0[136], gate_0[137], gate_0[138], gate_0[139], gate_0[140], gate_0[141], gate_0[142], gate_0[143], gate_0[144], gate_0[145], gate_0[146], gate_0[147], gate_0[148], gate_0[149], gate_0[150], gate_0[151], gate_0[152], gate_0[153], gate_0[154], gate_0[155], gate_0[156], gate_0[157], gate_0[158], gate_0[159], gate_0[160], gate_0[161], gate_0[162], gate_0[163], gate_0[164], gate_0[165], gate_0[166], gate_0[167], gate_0[168], gate_0[169], gate_0[170], gate_0[171], gate_0[172], gate_0[173], gate_0[174], gate_0[175], gate_0[176], gate_0[177], gate_0[178], gate_0[179], gate_0[180], gate_0[181], gate_0[182], gate_0[183], gate_0[184], gate_0[185], gate_0[186], gate_0[187], gate_0[188], gate_0[189], gate_0[190], gate_0[191], gate_0[192], gate_0[193], gate_0[194], gate_0[195], gate_0[196], gate_0[197], gate_0[198], gate_0[199], gate_0[200], gate_0[201], gate_0[202], gate_0[203], gate_0[204], gate_0[205], gate_0[206], gate_0[207], gate_0[208], gate_0[209], gate_0[210], gate_0[211], gate_0[212], gate_0[213], gate_0[214], gate_0[215], gate_0[216], gate_0[217], gate_0[218], gate_0[219], gate_0[220], gate_0[221], gate_0[222], gate_0[223], gate_0[224], gate_0[225], gate_0[226], gate_0[227], gate_0[228], gate_0[229], gate_0[230], gate_0[231], gate_0[232], gate_0[233], gate_0[234], gate_0[235], gate_0[236], gate_0[237], gate_0[238], gate_0[239], gate_0[240], gate_0[241], gate_0[242], gate_0[243], gate_0[244], gate_0[245], gate_0[246], gate_0[247], gate_0[248], gate_0[249], gate_0[250], gate_0[251], gate_0[252], gate_0[253], gate_0[254], gate_0[255]]

end SemaphoreMTB